{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/skillTabs.js\";\nimport * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport SkillTab from \"./skillTab\";\n\nclass SkillTabs extends React.Component {\n  render() {\n    const context = this.context;\n    const tabtypes = context.tabTypes; //let incrementTabIndex = () => dispatch({ type: \"increment-tab-index\" });\n\n    let tabCounter = 0; //incrementTabIndex();\n\n    const skilllist = this.props.catSkills;\n    const listtype = this.props.skilltype;\n    const radioGroupName = \"skillTabs\" + this.props.id; // STEP 1: Establish increment terms. Pay attention here!\n    // This is how to build a sequential counter for React in a nested map\n\n    let uniqueId = this.props.id;\n    let idStep = tabtypes.length;\n\n    if (uniqueId !== 0) {\n      uniqueId = uniqueId * idStep;\n    } //console.log(state.tabTypes);\n\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, tabtypes.map((tabtype, index) => {\n      // STEP 2: increment\n      uniqueId = uniqueId + 1;\n      let tabsClass = \"res-skill-\" + listtype + \" \" + tabtype;\n      let radioId = \"tab\" + uniqueId;\n      let isChecked = tabtype === \"info\";\n      let tabIcon = \"fas fa-\" + context.tabIcons[index];\n      let tabContentId = \"tab-content\" + uniqueId;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        className: tabsClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: radioGroupName,\n        id: radioId,\n        defaultChecked: isChecked,\n        tabIndex: uniqueId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: radioId,\n        tabIndex: uniqueId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: tabIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: tabContentId,\n        className: \"tab-content sketchy-border lined thin\",\n        \"data-display\": listtype,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(SkillTab, {\n        key: index,\n        id: index,\n        skilldata: skilllist,\n        tabtype: tabtype,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      })));\n    }));\n  }\n\n}\n\nSkillTabs.contextType = AppData;\nexport default SkillTabs;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/skillTabs.js"],"names":["React","AppData","SkillTab","SkillTabs","Component","render","context","tabtypes","tabTypes","tabCounter","skilllist","props","catSkills","listtype","skilltype","radioGroupName","id","uniqueId","idStep","length","map","tabtype","index","tabsClass","radioId","isChecked","tabIcon","tabIcons","tabContentId","contextType"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAEtCC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,KAAKA,OAArB;AACA,UAAMC,QAAQ,GAAGD,OAAO,CAACE,QAAzB,CAFO,CAGP;;AACA,QAAIC,UAAU,GAAG,CAAjB,CAJO,CAKP;;AAEA,UAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,SAA7B;AACA,UAAMC,QAAQ,GAAG,KAAKF,KAAL,CAAWG,SAA5B;AACA,UAAMC,cAAc,GAAG,cAAc,KAAKJ,KAAL,CAAWK,EAAhD,CATO,CAWP;AACA;;AACA,QAAIC,QAAQ,GAAG,KAAKN,KAAL,CAAWK,EAA1B;AACA,QAAIE,MAAM,GAAGX,QAAQ,CAACY,MAAtB;;AACA,QAAIF,QAAQ,KAAK,CAAjB,EAAoB;AAClBA,MAAAA,QAAQ,GAAGA,QAAQ,GAAGC,MAAtB;AACD,KAjBM,CAmBP;;;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,QAAQ,CAACa,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChC;AACAL,MAAAA,QAAQ,GAAGA,QAAQ,GAAG,CAAtB;AAEA,UAAIM,SAAS,GAAG,eAAeV,QAAf,GAA0B,GAA1B,GAAgCQ,OAAhD;AACA,UAAIG,OAAO,GAAG,QAAQP,QAAtB;AACA,UAAIQ,SAAS,GAAGJ,OAAO,KAAK,MAA5B;AACA,UAAIK,OAAO,GAAG,YAAYpB,OAAO,CAACqB,QAAR,CAAiBL,KAAjB,CAA1B;AACA,UAAIM,YAAY,GAAG,gBAAgBX,QAAnC;AAEA,0BACE;AAAI,QAAA,GAAG,EAAEK,KAAT;AAAgB,QAAA,SAAS,EAAEC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAER,cAFR;AAGE,QAAA,EAAE,EAAES,OAHN;AAIE,QAAA,cAAc,EAAEC,SAJlB;AAKE,QAAA,QAAQ,EAAER,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eASE;AAAO,QAAA,OAAO,EAAEO,OAAhB;AAAyB,QAAA,QAAQ,EAAEP,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAES,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,eAYE;AACE,QAAA,EAAE,EAAEE,YADN;AAEE,QAAA,SAAS,EAAC,uCAFZ;AAGE,wBAAcf,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAES,KADP;AAEE,QAAA,EAAE,EAAEA,KAFN;AAGE,QAAA,SAAS,EAAEZ,SAHb;AAIE,QAAA,OAAO,EAAEW,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAZF,CADF;AA2BD,KArCA,CADH,CADF;AA0CD;;AAhEqC;;AAAlClB,S,CACG0B,W,GAAc5B,O;AAkEvB,eAAeE,SAAf","sourcesContent":["import * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport SkillTab from \"./skillTab\";\n\nclass SkillTabs extends React.Component {\n  static contextType = AppData;\n  render() {\n    const context = this.context;\n    const tabtypes = context.tabTypes;\n    //let incrementTabIndex = () => dispatch({ type: \"increment-tab-index\" });\n    let tabCounter = 0;\n    //incrementTabIndex();\n\n    const skilllist = this.props.catSkills;\n    const listtype = this.props.skilltype;\n    const radioGroupName = \"skillTabs\" + this.props.id;\n\n    // STEP 1: Establish increment terms. Pay attention here!\n    // This is how to build a sequential counter for React in a nested map\n    let uniqueId = this.props.id;\n    let idStep = tabtypes.length;\n    if (uniqueId !== 0) {\n      uniqueId = uniqueId * idStep;\n    }\n\n    //console.log(state.tabTypes);\n    return (\n      <React.Fragment>\n        {tabtypes.map((tabtype, index) => {\n          // STEP 2: increment\n          uniqueId = uniqueId + 1;\n\n          let tabsClass = \"res-skill-\" + listtype + \" \" + tabtype;\n          let radioId = \"tab\" + uniqueId;\n          let isChecked = tabtype === \"info\";\n          let tabIcon = \"fas fa-\" + context.tabIcons[index];\n          let tabContentId = \"tab-content\" + uniqueId;\n\n          return (\n            <li key={index} className={tabsClass}>\n              <input\n                type=\"radio\"\n                name={radioGroupName}\n                id={radioId}\n                defaultChecked={isChecked}\n                tabIndex={uniqueId}\n              />\n\n              <label htmlFor={radioId} tabIndex={uniqueId}>\n                <i className={tabIcon}></i>\n              </label>\n              <div\n                id={tabContentId}\n                className=\"tab-content sketchy-border lined thin\"\n                data-display={listtype}\n              >\n                <SkillTab\n                  key={index}\n                  id={index}\n                  skilldata={skilllist}\n                  tabtype={tabtype}\n                />\n              </div>\n            </li>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SkillTabs;\n"]},"metadata":{},"sourceType":"module"}