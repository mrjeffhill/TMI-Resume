{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/debugger.js\";\nimport * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n\nconst axios = require(\"axios\").default;\n\nclass Debugger extends React.Component {\n  // ***** access via this.context\n  constructor(props) {\n    super(props);\n    this.state = {\n      ua: {},\n      ip: \"\",\n      ipData: {}\n    };\n    this.escFunction = this.escFunction.bind(this);\n  }\n\n  escFunction(event) {\n    if (event.keyCode === 27) {\n      //Do whatever when esc is pressed\n      alert(this.state.ip);\n    }\n  }\n\n  componentDidMount() {\n    var userIp = \"\";\n    var ipAddress = \"\";\n    var ipData = {};\n    const self = this;\n\n    const http = require('http');\n\n    var uaGetString = \"http://api.userstack.com/detect?access_key=b301331f9e5761edf368d241475b4836&ua=\" + navigator.userAgent;\n    axios.get(uaGetString).then(function (response) {\n      console.log(response);\n      self.setState({\n        ua: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n      self.setState({\n        ua: null\n      });\n    }).finally(function () {// always executed\n    });\n    http.get({\n      'host': 'api.ipify.org',\n      'port': 80,\n      'path': '/'\n    }, function (resp) {\n      resp.on('data', function (ip) {\n        console.log(\"My public IP address is: \" + ip);\n        var ipGetString = \"http://api.ipstack.com/\" + ip + \"?access_key=440420267b2d228f92803e8a2d074666\";\n        axios.get(ipGetString).then(function (response) {\n          console.log(response);\n          self.setState({\n            ip: response.data.ip,\n            ipData: response.data\n          });\n        }).catch(function (error) {\n          console.log(error);\n          self.setState({\n            ip: null,\n            ipData: null\n          });\n        }).finally(function () {// always executed\n        });\n      });\n    });\n    var screenData = helpers.getScreenData();\n    this.setState({\n      screenData: screenData\n    });\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, this.state && this.state.ip && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, this.state.ip));\n  }\n\n}\n\nDebugger.contextType = AppData;\nexport default Debugger;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/debugger.js"],"names":["React","AppData","helpers","axios","require","default","Debugger","Component","constructor","props","state","ua","ip","ipData","escFunction","bind","event","keyCode","alert","componentDidMount","userIp","ipAddress","self","http","uaGetString","navigator","userAgent","get","then","response","console","log","setState","data","catch","error","finally","resp","on","ipGetString","screenData","getScreenData","document","addEventListener","componentWillUnmount","removeEventListener","render","contextType"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n\nconst axios = require(\"axios\").default;\n\nclass Debugger extends React.Component {\nstatic contextType = AppData; // ***** access via this.context\n\n  constructor(props){\n    super(props);\n    this.state = {\n      ua: {},\n      ip: \"\",\n      ipData: {}\n    };\n    this.escFunction = this.escFunction.bind(this);\n  }\n  escFunction(event){\n    if(event.keyCode === 27) {\n      //Do whatever when esc is pressed\n      alert(this.state.ip);\n    }\n  }\n\n  componentDidMount(){\n    var userIp = \"\";\n    var ipAddress = \"\";\n    var ipData = {};\n    const self = this;\n    const http = require('http');\n\n    var uaGetString = \"http://api.userstack.com/detect?access_key=b301331f9e5761edf368d241475b4836&ua=\" + navigator.userAgent;\n    axios.get(uaGetString)\n    .then(function (response) {\n        console.log(response);\n        self.setState({ ua: response.data })\n    })\n    .catch(function (error) {\n        console.log(error);\n        self.setState({ ua: null })\n    })\n    .finally(function () {\n      // always executed\n    });\n    \n    http.get({'host': 'api.ipify.org', 'port': 80, 'path': '/'}, function(resp) {\n      resp.on('data', function(ip) {\n        console.log(\"My public IP address is: \" + ip);\n\n        var ipGetString = \"http://api.ipstack.com/\" + ip + \"?access_key=440420267b2d228f92803e8a2d074666\"\n        axios.get(ipGetString)\n        .then(function (response) {\n            console.log(response);\n\n            self.setState({ ip: response.data.ip, ipData: response.data })\n        })\n        .catch(function (error) {\n            console.log(error);\n            self.setState({ ip: null, ipData: null })\n        })\n        .finally(function () {\n        // always executed\n        });\n\n      });\n    });\n\n    var screenData = helpers.getScreenData();\n    this.setState({ screenData: screenData })\n\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n  render(){\n\n    return (   \n      <div>{ this.state && this.state.ip &&\n                <div>{this.state.ip}</div>\n            }</div>\n    )\n  }\n}\n\nexport default Debugger;"]},"metadata":{},"sourceType":"module"}