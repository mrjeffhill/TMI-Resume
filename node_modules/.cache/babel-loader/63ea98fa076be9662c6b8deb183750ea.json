{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/appdata.js\";\nimport * as React from \"react\";\nimport Resume from \"../assets/js/resume\";\nconst resumeData = Resume;\nlet AppData = React.createContext();\nlet initialState = {\n  resume: resumeData,\n  version: \"0.6.6.6 OMeGa\",\n  tts: false,\n  themes: [\"default\", \"agile\"],\n  currentTheme: \"\",\n  introVisible: false,\n  menuVisible: false,\n  qsObj: false,\n  urlParams: new URLSearchParams(window.location.search),\n  rotationClasses: \"rr-7 rr-6 rr-5 rr-4 rr-3 rr-2 rr-1 rr0 rr1 rr2 rr3 rr4 rr5 rr6 rr7\",\n  polyClasses: \"poly-0 poly-1 poly-2 poly-3 poly-4\",\n  $carousel: null,\n  isFlickity: false,\n  map: null,\n  myLatLng: {\n    lat: 42.4316604,\n    lng: -83.484051\n  },\n  testLL: {\n    lat: 42.279594,\n    lng: -83.732124\n  },\n  // AA\n  tabTypes: [\"chart\", \"table\", \"stars\", \"info\"],\n  tabIcons: [\"chart-pie\", \"table\", \"star-half-alt\", \"info-circle\"],\n  tabCounter: 0\n  /*\n  contextFunctions: {\n    toggleMenu: () => {\n      this.setState({ menuVisible: !this.menuVisible });\n    },\n    toggleIntro: () => {\n      this.setState({ introVisible: !this.introVisible });\n    },\n    myGlobalFunction: e => {\n      console.log(\"global function called for: \" + e.target.nodeName);\n      this.introVisible = !this.introVisible;\n    },\n    increment: () => {\n      this.setState({ num: this.state.num + 1 });\n    },\n    decrement: () => {\n      this.setState({ num: this.state.num - 1 });\n    },\n    reset: () => {\n      this.setState({ num: this.num });\n    },\n    whoWantsABodyMassage: () => {\n      document.body.classList.add(\"loaded\");\n      document.body.classList.remove(\"loading\");\n    }\n  }\n  */\n\n};\nconst contextFunctions = {\n  toggleMenu: () => {\n    this.setState({\n      menuVisible: !this.menuVisible\n    });\n  },\n  toggleIntro: e => {\n    //this.setState({ introVisible: !this.introVisible });\n    console.log(e.target);\n    console.log(props);\n  },\n  myGlobalFunction: e => {\n    console.log(\"global function called for: \" + e.target.nodeName);\n    this.introVisible = !this.introVisible;\n  },\n  increment: () => {\n    this.setState({\n      num: this.state.num + 1\n    });\n  },\n  decrement: () => {\n    this.setState({\n      num: this.state.num - 1\n    });\n  },\n  reset: () => {\n    this.setState({\n      num: this.num\n    });\n  },\n  whoWantsABodyMassage: () => {\n    document.body.classList.add(\"loaded\");\n    document.body.classList.remove(\"loading\");\n  }\n};\n\nlet reducer = (state = initialState, action) => {\n  console.log(action.payload);\n\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n\n    case \"increment\":\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case \"decrement\":\n      return { ...state,\n        count: state.count - 1\n      };\n\n    case \"set-color\":\n      return { ...state,\n        currentColor: action.payload\n      };\n\n    case \"increment-tab-index\":\n      return { ...state,\n        tabCounter: state.tabCounter + 1\n      };\n\n    case \"toggle-intro\":\n      return { ...state,\n        introVisible: !state.introVisible\n      };\n\n    case \"toggle-menu\":\n      return { ...state,\n        menuVisible: !state.menuVisible\n      };\n\n    case \"toggle-theme\":\n      console.log(action.payload); // bool: !this.state.bool\n      // hasClass(element, className)\n      //return document.body.classList.toggle(\"agile\", state.isAgile);\n\n      return { ...state,\n        currentTheme: action.payload\n      };\n\n    default:\n      return null;\n  }\n};\n\nfunction AppDataProvider(props) {\n  //let [state, dispatch] = React.useReducer(reducer, initialState);\n  //let value = { state, dispatch };\n  //return <AppData.Provider value={value}>{props.children}</AppData.Provider>;\n  return /*#__PURE__*/React.createElement(AppData.Provider, {\n    value: { ...initialState,\n      contextFunctions: contextFunctions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nlet AppDataConsumer = AppData.Consumer;\nexport { AppData, AppDataProvider, AppDataConsumer };","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/appdata.js"],"names":["React","Resume","resumeData","AppData","createContext","initialState","resume","version","tts","themes","currentTheme","introVisible","menuVisible","qsObj","urlParams","URLSearchParams","window","location","search","rotationClasses","polyClasses","$carousel","isFlickity","map","myLatLng","lat","lng","testLL","tabTypes","tabIcons","tabCounter","contextFunctions","toggleMenu","setState","toggleIntro","e","console","log","target","props","myGlobalFunction","nodeName","increment","num","state","decrement","reset","whoWantsABodyMassage","document","body","classList","add","remove","reducer","action","payload","type","count","currentColor","AppDataProvider","children","AppDataConsumer","Consumer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Resume from \"../assets/js/resume\";\n\nconst resumeData = Resume;\n\nlet AppData = React.createContext();\n\nlet initialState = {\n  resume: resumeData,\n  version: \"0.6.6.6 OMeGa\",\n  tts: false,\n  themes: [\"default\", \"agile\"],\n  currentTheme: \"\",\n  introVisible: false,\n  menuVisible: false,\n  qsObj: false,\n  urlParams: new URLSearchParams(window.location.search),\n  rotationClasses:\n    \"rr-7 rr-6 rr-5 rr-4 rr-3 rr-2 rr-1 rr0 rr1 rr2 rr3 rr4 rr5 rr6 rr7\",\n  polyClasses: \"poly-0 poly-1 poly-2 poly-3 poly-4\",\n  $carousel: null,\n  isFlickity: false,\n  map: null,\n  myLatLng: { lat: 42.4316604, lng: -83.484051 },\n  testLL: { lat: 42.279594, lng: -83.732124 }, // AA\n  tabTypes: [\"chart\", \"table\", \"stars\", \"info\"],\n  tabIcons: [\"chart-pie\", \"table\", \"star-half-alt\", \"info-circle\"],\n  tabCounter: 0\n  /*\n  contextFunctions: {\n    toggleMenu: () => {\n      this.setState({ menuVisible: !this.menuVisible });\n    },\n    toggleIntro: () => {\n      this.setState({ introVisible: !this.introVisible });\n    },\n    myGlobalFunction: e => {\n      console.log(\"global function called for: \" + e.target.nodeName);\n      this.introVisible = !this.introVisible;\n    },\n    increment: () => {\n      this.setState({ num: this.state.num + 1 });\n    },\n    decrement: () => {\n      this.setState({ num: this.state.num - 1 });\n    },\n    reset: () => {\n      this.setState({ num: this.num });\n    },\n    whoWantsABodyMassage: () => {\n      document.body.classList.add(\"loaded\");\n      document.body.classList.remove(\"loading\");\n    }\n  }\n  */\n};\n\nconst contextFunctions = {\n  toggleMenu: () => {\n    this.setState({ menuVisible: !this.menuVisible });\n  },\n  toggleIntro: e => {\n    //this.setState({ introVisible: !this.introVisible });\n    console.log(e.target);\n    console.log(props);\n  },\n  myGlobalFunction: e => {\n    console.log(\"global function called for: \" + e.target.nodeName);\n    this.introVisible = !this.introVisible;\n  },\n  increment: () => {\n    this.setState({ num: this.state.num + 1 });\n  },\n  decrement: () => {\n    this.setState({ num: this.state.num - 1 });\n  },\n  reset: () => {\n    this.setState({ num: this.num });\n  },\n  whoWantsABodyMassage: () => {\n    document.body.classList.add(\"loaded\");\n    document.body.classList.remove(\"loading\");\n  }\n};\n\nlet reducer = (state = initialState, action) => {\n  console.log(action.payload);\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case \"increment\":\n      return { ...state, count: state.count + 1 };\n    case \"decrement\":\n      return { ...state, count: state.count - 1 };\n    case \"set-color\":\n      return { ...state, currentColor: action.payload };\n    case \"increment-tab-index\":\n      return { ...state, tabCounter: state.tabCounter + 1 };\n    case \"toggle-intro\":\n      return { ...state, introVisible: !state.introVisible };\n    case \"toggle-menu\":\n      return { ...state, menuVisible: !state.menuVisible };\n    case \"toggle-theme\":\n      console.log(action.payload);\n      // bool: !this.state.bool\n      // hasClass(element, className)\n      //return document.body.classList.toggle(\"agile\", state.isAgile);\n      return { ...state, currentTheme: action.payload };\n    default:\n      return null;\n  }\n};\n\nfunction AppDataProvider(props) {\n  //let [state, dispatch] = React.useReducer(reducer, initialState);\n  //let value = { state, dispatch };\n\n  //return <AppData.Provider value={value}>{props.children}</AppData.Provider>;\n\n  return (\n    <AppData.Provider\n      value={{ ...initialState, contextFunctions: contextFunctions }}\n    >\n      {props.children}\n    </AppData.Provider>\n  );\n}\n\nlet AppDataConsumer = AppData.Consumer;\n\nexport { AppData, AppDataProvider, AppDataConsumer };\n"]},"metadata":{},"sourceType":"module"}