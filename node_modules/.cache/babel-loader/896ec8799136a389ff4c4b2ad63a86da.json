{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/skewer.js\";\nimport * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n\nclass Skewer extends React.Component {\n  // ***** access via this.context\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasEntropy: false,\n      entropyEls: []\n    };\n    this.toggleEntropy = this.toggleEntropy.bind(this);\n  }\n\n  componentDidMount() {\n    const entropyEls1 = document.getElementsByClassName(\"rr\"); // .taped-b:before !need to rework for pseudo els\n\n    const entropyEls2 = document.getElementsByClassName(\"taped-b\");\n    const allEntropyElls = [...entropyEls1, ...entropyEls2];\n    this.setState({\n      hasEntropy: helpers.hasClass(document.body, \"entropy\"),\n      entropyEls: allEntropyElls\n    });\n  }\n\n  componentWillUpdate(nextProps, nextState) {}\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  toggleEntropy(event) {\n    event.preventDefault();\n    document.body.classList.toggle(\"entropy\");\n    this.setState({\n      hasEntropy: !this.state.hasEntropy\n    });\n    let skewees = this.state.entropyEls;\n\n    if (this.state.hasEntropy) {\n      console.log(this.state.hasEntropy);\n    } else {\n      console.log(this.state.hasEntropy);\n    }\n  }\n  /*\n  var getMessy = function(els, how){\n  let allEls = els.add('.taped-b:before');\n  $.each(allEls, function( i, v ) {\n  how ? $('body').addClass('entropy') : $('body').removeClass('entropy');\n  let rand = how ? Math.floor(Math.random() * 15) - 7 : 0;\n  $(this).css('transform','rotate(' + rand + 'deg)').removeClass(rotationClasses).addClass('rr' + rand);\n         if ($(this).is('.add-tack')){\n  \t$(this).css('margin-left', + (rand / 2) + 'em');\n  }\n  if ($(this).is('.poly-wrap')){\n  \t$(this).removeClass(polyClasses).addClass('poly-' + getRandom(5));\n  \t//$(this).removeClass(polyClasses).addClass('poly-0');\n  }\n  });\n  }\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-align-center cleany extra\",\n      onClick: e => {\n        this.toggleEntropy(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltip\",\n      \"data-title\": \"For those with OCD or ADD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nSkewer.contextType = AppData;\nexport default Skewer;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/skewer.js"],"names":["React","AppData","helpers","Skewer","Component","constructor","props","state","hasEntropy","entropyEls","toggleEntropy","bind","componentDidMount","entropyEls1","document","getElementsByClassName","entropyEls2","allEntropyElls","setState","hasClass","body","componentWillUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","event","preventDefault","classList","toggle","skewees","console","log","render","e","contextType"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACL;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,KADD;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb;AAKA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,WAAW,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,IAAhC,CAApB,CADkB,CAElB;;AACA,UAAMC,WAAW,GAAGF,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,CAApB;AACA,UAAME,cAAc,GAAG,CAAC,GAAGJ,WAAJ,EAAiB,GAAGG,WAApB,CAAvB;AACA,SAAKE,QAAL,CAAc;AACZV,MAAAA,UAAU,EAAEN,OAAO,CAACiB,QAAR,CAAiBL,QAAQ,CAACM,IAA1B,EAAgC,SAAhC,CADA;AAEZX,MAAAA,UAAU,EAAEQ;AAFA,KAAd;AAID;;AACDI,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAAE;;AAC5CC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAAE;;AAE3ChB,EAAAA,aAAa,CAACiB,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACC,cAAN;AAEAd,IAAAA,QAAQ,CAACM,IAAT,CAAcS,SAAd,CAAwBC,MAAxB,CAA+B,SAA/B;AACA,SAAKZ,QAAL,CAAc;AACZV,MAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADZ,KAAd;AAGA,QAAIuB,OAAO,GAAG,KAAKxB,KAAL,CAAWE,UAAzB;;AACA,QAAI,KAAKF,KAAL,CAAWC,UAAf,EAA2B;AACzBwB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWC,UAAvB;AACD,KAFD,MAEO;AACLwB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWC,UAAvB;AACD;AACF;AACD;;;;;;;;;;;;;;;;;;;AAoBA0B,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,OAAO,EAAEC,CAAC,IAAI;AACZ,aAAKzB,aAAL,CAAmByB,CAAnB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,oBAAW,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAtEkC;;AAA/BhC,M,CACGiC,W,GAAcnC,O;AAwEvB,eAAeE,MAAf","sourcesContent":["import * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n\nclass Skewer extends React.Component {\n  static contextType = AppData; // ***** access via this.context\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasEntropy: false,\n      entropyEls: []\n    };\n\n    this.toggleEntropy = this.toggleEntropy.bind(this);\n  }\n  componentDidMount() {\n    const entropyEls1 = document.getElementsByClassName(\"rr\");\n    // .taped-b:before !need to rework for pseudo els\n    const entropyEls2 = document.getElementsByClassName(\"taped-b\");\n    const allEntropyElls = [...entropyEls1, ...entropyEls2];\n    this.setState({\n      hasEntropy: helpers.hasClass(document.body, \"entropy\"),\n      entropyEls: allEntropyElls\n    });\n  }\n  componentWillUpdate(nextProps, nextState) {}\n  componentDidUpdate(prevProps, prevState) {}\n\n  toggleEntropy(event) {\n    event.preventDefault();\n\n    document.body.classList.toggle(\"entropy\");\n    this.setState({\n      hasEntropy: !this.state.hasEntropy\n    });\n    let skewees = this.state.entropyEls;\n    if (this.state.hasEntropy) {\n      console.log(this.state.hasEntropy);\n    } else {\n      console.log(this.state.hasEntropy);\n    }\n  }\n  /*\n\nvar getMessy = function(els, how){\n\tlet allEls = els.add('.taped-b:before');\n\n\t$.each(allEls, function( i, v ) {\n\t\thow ? $('body').addClass('entropy') : $('body').removeClass('entropy');\n\t\tlet rand = how ? Math.floor(Math.random() * 15) - 7 : 0;\n\t\t$(this).css('transform','rotate(' + rand + 'deg)').removeClass(rotationClasses).addClass('rr' + rand);\n\n        if ($(this).is('.add-tack')){\n\t\t\t$(this).css('margin-left', + (rand / 2) + 'em');\n\t\t}\n\t\tif ($(this).is('.poly-wrap')){\n\t\t\t$(this).removeClass(polyClasses).addClass('poly-' + getRandom(5));\n\t\t\t//$(this).removeClass(polyClasses).addClass('poly-0');\n\t\t}\n\t});\n}\n  */\n  render() {\n    return (\n      <i\n        className=\"fas fa-align-center cleany extra\"\n        onClick={e => {\n          this.toggleEntropy(e);\n        }}\n      >\n        <span className=\"tooltip\" data-title=\"For those with OCD or ADD\"></span>\n      </i>\n    );\n  }\n}\n\nexport default Skewer;\n"]},"metadata":{},"sourceType":"module"}