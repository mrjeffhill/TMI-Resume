{"ast":null,"code":"import moment from \"moment\";\n\nconst axios = require(\"axios\").default;\n\nconst helpers = {\n  classify: function (str) {\n    return str.replace(/\\W/g, \"-\").toLowerCase();\n  },\n  capFirstLetter: function (str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n  formatPhone: function (str) {\n    return str.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1 $2-$3\");\n  },\n  getMiles: function (meters) {\n    return parseInt(meters * 0.000621371192);\n  },\n  formatMonthYear: function (str) {\n    // https://stackoverflow.com/questions/4310953/invalid-date-in-safari\n    let test = str.replace(/-/g, \"/\");\n    let hack = moment(new Date(test));\n    let reform = moment(hack).format();\n    return moment(reform).format('[<div class=\"m\">]MMM[</div> <div class=\"y\">]YYYY[</div>]');\n  },\n  shuffle: function (a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n\n    return a;\n  },\n  hasClass: function (element, className) {\n    return (\" \" + element.className + \" \").indexOf(\" \" + className + \" \") > -1;\n  },\n  getRandom: function (max) {\n    let result = max === 1 ? Math.random() : Math.floor(Math.random() * max);\n    return result;\n  },\n  twinkleTwinkle: function (score, max) {\n    let stars = \"\";\n    let p = score;\n    let p2 = score - 1;\n    let spread = [];\n    p % 2 === 0 ? spread = [p / 2, 0, max - p / 2] : spread = [p2 / 2, 1, max - 1 - p2 / 2];\n    let full = 0;\n\n    while (full < spread[0]) {\n      stars += '<i class=\"fas full-star\"></i>';\n      full++;\n    }\n\n    let half = 0;\n\n    while (half < spread[1]) {\n      stars += '<i class=\"fas half-star\"></i>';\n      half++;\n    }\n\n    let empty = 0;\n\n    while (empty < spread[2]) {\n      stars += '<i class=\"far empty-star\"></i>';\n      empty++;\n    }\n\n    return stars;\n  },\n  parseOmatic: function (obj) {\n    var parsed = \"\";\n\n    for (var key in obj) {\n      if (typeof obj[key] === \"object\") {\n        parsed += '<dt class=\"sub-head ' + key + '\">' + key + '</dt><dd class=\"sub-head ' + key + '\">...</dd>';\n        this.parseOmatic(obj[key]);\n      } else {\n        parsed += '<dt class=\"' + key + '\">' + key + '</dt><dd class=\"' + key + '\">' + obj[key] + \"</dd>\";\n      }\n    }\n\n    return parsed; //parsed = '';\n  },\n  getDevicive: function (UAstr) {\n    var getString = \"http://api.userstack.com/detect?access_key=b301331f9e5761edf368d241475b4836&ua=\" + UAstr;\n    axios.get(getString).then(function (response) {\n      console.log(response);\n      return response;\n    });\n  },\n  getSniffy: function () {\n    //var getString = \"https://ipinfo.io\";\n    var getString = \"https://api.ipify.org?format=json\";\n    axios.get(getString).then(function (response) {\n      console.log(response);\n      return response;\n    });\n    /*\n    // whatismybrowser.com API key: c4662cd0747753c5c69e419ab7e0703f\n    var getSniffy = function(){\n    \t//$.getJSON('https://json.geoiplookup.io/api?callback=?', function(data) {\n    \t$.getJSON('https://ipinfo.io', function(data){\n    \t    console.log('ipinfo data:... ');\n    \t    console.log(data);\n    \t    parseOmatic(data, $('.ip-parsed'));\n    \t});\n    }\n    */\n  },\n  getScreenData: function () {\n    var screenData = {};\n\n    function gcd(a, b) {\n      if (a == b) {\n        return a;\n      } else if (a > b) {\n        return gcd(a - b, b);\n      } else {\n        return gcd(a, b - a);\n      }\n    }\n\n    var devicePixelRatio = window.devicePixelRatio || 1;\n    var sw = window.screen.width * devicePixelRatio;\n    var sh = window.screen.height * devicePixelRatio;\n    var cd = window.screen.colorDepth;\n    var div = gcd(sw, sh);\n    var wd = sw / div;\n    var hd = sh / div;\n    var ww = window.width();\n    var wh = window.height(); // aspect ratios\n\n    var sr = Math.round(100 * sw / sh) / 100; // screen\n\n    var wr = Math.round(100 * ww / wh) / 100; // window\n\n    screenData = {\n      \"device-width\": sw,\n      \"device-height\": sh,\n      \"screen-aspect-width\": wd,\n      \"screen-aspect-height\": hd,\n      \"screen-aspect-ratio\": sr,\n      \"screen-color-depth\": cd,\n      \"window-width\": ww,\n      \"window-height\": wh,\n      \"window-ratio\": wr\n    }; //this.parseOmatic(screenData, $('.ua-parsed'));\n  }\n};\n/*\n\n\nvar getDevicive = function(UAstr){ // https://userstack.com/documentation\n\t$.ajax({\n\t\turl: 'http://api.userstack.com/detect',\n\t\tdata: {\n\t\t\taccess_key: 'b301331f9e5761edf368d241475b4836',\n\t\t\tua: UAstr\n\t\t},\n\t\tdataType: 'jsonp',\n\t\tsuccess: function(json) {\n\t\t\t\n\t\t\tif (json.device && json.device.type) {\n\n\t\t\t\tconsole.log('User Device:...');\n\t\t\t\tconsole.log(json.device.type);\n\t\t\t\tconsole.log('More user data:...');\n\t\t\t\tconsole.log(json);\n\n\t\t\t\t//parseOmatic(json, $('.ua-parsed'));\n\n\t\t\t\t$('html').addClass('device-' + json.device.type);\n\t\t\t} else {\n\t\t\t\t$('html').addClass('device-unknown');\n\t\t\t\t//parseOmatic(json, $('.ua-parsed'));\n\t\t\t}\n\t\t\tparseOmatic(json, $('.ua-parsed'));\n\t\t}\n\t});\n}\n\n$(document).keyup(function(e) {\n     if (e.key === \"Escape\") { // keycode `27`\n        debugHandler($('.all-parsed'), false);\n    }\n});\n\n$(document).on('click', 'li.debug-toggle', function(e) {\n\tdebugHandler($('.all-parsed'), false);\n});\n\n\n\n// whatismybrowser.com API key: c4662cd0747753c5c69e419ab7e0703f\nvar getSniffy = function(){\n\t//$.getJSON('https://json.geoiplookup.io/api?callback=?', function(data) {\n\t$.getJSON('https://ipinfo.io', function(data){\n\t    console.log('ipinfo data:... ');\n\t    console.log(data);\n\t    parseOmatic(data, $('.ip-parsed'));\n\t});\n}\n\n*/\n\nexport default helpers;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/helpers.js"],"names":["moment","axios","require","default","helpers","classify","str","replace","toLowerCase","capFirstLetter","charAt","toUpperCase","slice","formatPhone","getMiles","meters","parseInt","formatMonthYear","test","hack","Date","reform","format","shuffle","a","i","length","j","Math","floor","random","hasClass","element","className","indexOf","getRandom","max","result","twinkleTwinkle","score","stars","p","p2","spread","full","half","empty","parseOmatic","obj","parsed","key","getDevicive","UAstr","getString","get","then","response","console","log","getSniffy","getScreenData","screenData","gcd","b","devicePixelRatio","window","sw","screen","width","sh","height","cd","colorDepth","div","wd","hd","ww","wh","sr","round","wr"],"mappings":"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","sourcesContent":["import moment from \"moment\";\n\nconst axios = require(\"axios\").default;\n\nconst helpers = {\n  classify: function(str) {\n    return str.replace(/\\W/g, \"-\").toLowerCase();\n  },\n  capFirstLetter: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n  formatPhone: function(str) {\n    return str.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1 $2-$3\");\n  },\n  getMiles: function(meters) {\n    return parseInt(meters * 0.000621371192);\n  },\n  formatMonthYear: function(str) {\n    // https://stackoverflow.com/questions/4310953/invalid-date-in-safari\n    let test = str.replace(/-/g, \"/\");\n    let hack = moment(new Date(test));\n    let reform = moment(hack).format();\n    return moment(reform).format(\n      '[<div class=\"m\">]MMM[</div> <div class=\"y\">]YYYY[</div>]'\n    );\n  },\n  shuffle: function(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  },\n  hasClass: function(element, className) {\n    return (\" \" + element.className + \" \").indexOf(\" \" + className + \" \") > -1;\n  },\n  getRandom: function(max) {\n    let result = max === 1 ? Math.random() : Math.floor(Math.random() * max);\n    return result;\n  },\n  twinkleTwinkle: function(score, max) {\n    let stars = \"\";\n    let p = score;\n    let p2 = score - 1;\n    let spread = [];\n\n    p % 2 === 0\n      ? (spread = [p / 2, 0, max - p / 2])\n      : (spread = [p2 / 2, 1, max - 1 - p2 / 2]);\n\n    let full = 0;\n    while (full < spread[0]) {\n      stars += '<i class=\"fas full-star\"></i>';\n      full++;\n    }\n    let half = 0;\n    while (half < spread[1]) {\n      stars += '<i class=\"fas half-star\"></i>';\n      half++;\n    }\n    let empty = 0;\n    while (empty < spread[2]) {\n      stars += '<i class=\"far empty-star\"></i>';\n      empty++;\n    }\n    return stars;\n  },\n  parseOmatic: function(obj) {\n    var parsed = \"\";\n    for (var key in obj) {\n      if (typeof obj[key] === \"object\") {\n        parsed +=\n          '<dt class=\"sub-head ' +\n          key +\n          '\">' +\n          key +\n          '</dt><dd class=\"sub-head ' +\n          key +\n          '\">...</dd>';\n        this.parseOmatic(obj[key]);\n      } else {\n        parsed +=\n          '<dt class=\"' +\n          key +\n          '\">' +\n          key +\n          '</dt><dd class=\"' +\n          key +\n          '\">' +\n          obj[key] +\n          \"</dd>\";\n      }\n    }\n    return parsed;\n    //parsed = '';\n  },\n  getDevicive: function(UAstr) {\n    var getString = \"http://api.userstack.com/detect?access_key=b301331f9e5761edf368d241475b4836&ua=\" + UAstr;\n\n    axios.get(getString).then(function(response) {\n      console.log(response);\n      return response;\n    });\n  },\n  getSniffy: function() {\n    //var getString = \"https://ipinfo.io\";\n    var getString = \"https://api.ipify.org?format=json\";\n\n    axios.get(getString).then(function(response) {\n      console.log(response);\n      return response;\n    });\n\n/*\n// whatismybrowser.com API key: c4662cd0747753c5c69e419ab7e0703f\nvar getSniffy = function(){\n\t//$.getJSON('https://json.geoiplookup.io/api?callback=?', function(data) {\n\t$.getJSON('https://ipinfo.io', function(data){\n\t    console.log('ipinfo data:... ');\n\t    console.log(data);\n\t    parseOmatic(data, $('.ip-parsed'));\n\t});\n}\n*/\n\n  },\n  getScreenData: function() {\n    var screenData = {};\n    function gcd(a, b) {\n      if (a == b) {\n        return a;\n      } else if (a > b) {\n        return gcd(a - b, b);\n      } else {\n        return gcd(a, b - a);\n      }\n    }\n    var devicePixelRatio = window.devicePixelRatio || 1;\n    var sw = window.screen.width * devicePixelRatio;\n    var sh = window.screen.height * devicePixelRatio;\n    var cd = window.screen.colorDepth;\n    var div = gcd(sw, sh);\n    var wd = sw / div;\n    var hd = sh / div;\n    var ww = window.width();\n    var wh = window.height();\n    // aspect ratios\n    var sr = Math.round((100 * sw) / sh) / 100; // screen\n    var wr = Math.round((100 * ww) / wh) / 100; // window\n\n    screenData = {\n      \"device-width\": sw,\n      \"device-height\": sh,\n      \"screen-aspect-width\": wd,\n      \"screen-aspect-height\": hd,\n      \"screen-aspect-ratio\": sr,\n      \"screen-color-depth\": cd,\n      \"window-width\": ww,\n      \"window-height\": wh,\n      \"window-ratio\": wr\n    };\n    //this.parseOmatic(screenData, $('.ua-parsed'));\n  }\n};\n\n/*\n\n\nvar getDevicive = function(UAstr){ // https://userstack.com/documentation\n\t$.ajax({\n\t\turl: 'http://api.userstack.com/detect',\n\t\tdata: {\n\t\t\taccess_key: 'b301331f9e5761edf368d241475b4836',\n\t\t\tua: UAstr\n\t\t},\n\t\tdataType: 'jsonp',\n\t\tsuccess: function(json) {\n\t\t\t\n\t\t\tif (json.device && json.device.type) {\n\n\t\t\t\tconsole.log('User Device:...');\n\t\t\t\tconsole.log(json.device.type);\n\t\t\t\tconsole.log('More user data:...');\n\t\t\t\tconsole.log(json);\n\n\t\t\t\t//parseOmatic(json, $('.ua-parsed'));\n\n\t\t\t\t$('html').addClass('device-' + json.device.type);\n\t\t\t} else {\n\t\t\t\t$('html').addClass('device-unknown');\n\t\t\t\t//parseOmatic(json, $('.ua-parsed'));\n\t\t\t}\n\t\t\tparseOmatic(json, $('.ua-parsed'));\n\t\t}\n\t});\n}\n\n$(document).keyup(function(e) {\n     if (e.key === \"Escape\") { // keycode `27`\n        debugHandler($('.all-parsed'), false);\n    }\n});\n\n$(document).on('click', 'li.debug-toggle', function(e) {\n\tdebugHandler($('.all-parsed'), false);\n});\n\n\n\n// whatismybrowser.com API key: c4662cd0747753c5c69e419ab7e0703f\nvar getSniffy = function(){\n\t//$.getJSON('https://json.geoiplookup.io/api?callback=?', function(data) {\n\t$.getJSON('https://ipinfo.io', function(data){\n\t    console.log('ipinfo data:... ');\n\t    console.log(data);\n\t    parseOmatic(data, $('.ip-parsed'));\n\t});\n}\n\n*/\n\nexport default helpers;\n"]},"metadata":{},"sourceType":"module"}