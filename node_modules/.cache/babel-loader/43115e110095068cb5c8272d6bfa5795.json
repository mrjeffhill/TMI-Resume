{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/skewer.js\";\nimport * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n\nclass Skewer extends React.Component {\n  // ***** access via this.context\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasEntropy: false\n    };\n    this.toggleEntropy = this.toggleEntropy.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      hasEntropy: helpers.hasClass(document.body, \"entropy\")\n    });\n  }\n\n  componentWillUpdate(nextProps, nextState) {}\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  toggleEntropy(event) {\n    event.preventDefault();\n    document.body.classList.toggle(\"entropy\");\n    this.setState({\n      hasEntropy: !this.state.hasEntropy\n    });\n    let entropyEls = document.getElementsByClassName(\"rr\");\n    entropyEls.concat(document.getElementsByClassName(\"taped-b\"));\n\n    if (this.state.hasEntropy) {\n      console.log(this.state.hasEntropy);\n    } else {\n      console.log(this.state.hasEntropy);\n    }\n  }\n  /*\n  var getMessy = function(els, how){\n  let allEls = els.add('.taped-b:before');\n  $.each(allEls, function( i, v ) {\n  how ? $('body').addClass('entropy') : $('body').removeClass('entropy');\n  let rand = how ? Math.floor(Math.random() * 15) - 7 : 0;\n  $(this).css('transform','rotate(' + rand + 'deg)').removeClass(rotationClasses).addClass('rr' + rand);\n         if ($(this).is('.add-tack')){\n  \t$(this).css('margin-left', + (rand / 2) + 'em');\n  }\n  if ($(this).is('.poly-wrap')){\n  \t$(this).removeClass(polyClasses).addClass('poly-' + getRandom(5));\n  \t//$(this).removeClass(polyClasses).addClass('poly-0');\n  }\n  });\n  }\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-align-center cleany extra\",\n      onClick: e => {\n        this.toggleEntropy(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltip\",\n      \"data-title\": \"For those with OCD or ADD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nSkewer.contextType = AppData;\nexport default Skewer;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/skewer.js"],"names":["React","AppData","helpers","Skewer","Component","constructor","props","state","hasEntropy","toggleEntropy","bind","componentDidMount","setState","hasClass","document","body","componentWillUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","event","preventDefault","classList","toggle","entropyEls","getElementsByClassName","concat","console","log","render","e","contextType"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACL;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAIA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,UAAU,EAAEN,OAAO,CAACW,QAAR,CAAiBC,QAAQ,CAACC,IAA1B,EAAgC,SAAhC;AAAd,KAAd;AACD;;AACDC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAAE;;AAC5CC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAAE;;AAE3CZ,EAAAA,aAAa,CAACa,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACC,cAAN;AAEAT,IAAAA,QAAQ,CAACC,IAAT,CAAcS,SAAd,CAAwBC,MAAxB,CAA+B,SAA/B;AACA,SAAKb,QAAL,CAAc;AACZJ,MAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADZ,KAAd;AAIA,QAAIkB,UAAU,GAAGZ,QAAQ,CAACa,sBAAT,CAAgC,IAAhC,CAAjB;AACAD,IAAAA,UAAU,CAACE,MAAX,CAAkBd,QAAQ,CAACa,sBAAT,CAAgC,SAAhC,CAAlB;;AAEA,QAAI,KAAKpB,KAAL,CAAWC,UAAf,EAA2B;AACzBqB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWC,UAAvB;AACD,KAFD,MAEO;AACLqB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWC,UAAvB;AACD;AACF;AACD;;;;;;;;;;;;;;;;;;;AAoBAuB,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,OAAO,EAAEC,CAAC,IAAI;AACZ,aAAKvB,aAAL,CAAmBuB,CAAnB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,oBAAW,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAjEkC;;AAA/B7B,M,CACG8B,W,GAAchC,O;AAmEvB,eAAeE,MAAf","sourcesContent":["import * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n\nclass Skewer extends React.Component {\n  static contextType = AppData; // ***** access via this.context\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasEntropy: false\n    };\n\n    this.toggleEntropy = this.toggleEntropy.bind(this);\n  }\n  componentDidMount() {\n    this.setState({ hasEntropy: helpers.hasClass(document.body, \"entropy\") });\n  }\n  componentWillUpdate(nextProps, nextState) {}\n  componentDidUpdate(prevProps, prevState) {}\n\n  toggleEntropy(event) {\n    event.preventDefault();\n\n    document.body.classList.toggle(\"entropy\");\n    this.setState({\n      hasEntropy: !this.state.hasEntropy\n    });\n\n    let entropyEls = document.getElementsByClassName(\"rr\");\n    entropyEls.concat(document.getElementsByClassName(\"taped-b\"));\n\n    if (this.state.hasEntropy) {\n      console.log(this.state.hasEntropy);\n    } else {\n      console.log(this.state.hasEntropy);\n    }\n  }\n  /*\n\nvar getMessy = function(els, how){\n\tlet allEls = els.add('.taped-b:before');\n\n\t$.each(allEls, function( i, v ) {\n\t\thow ? $('body').addClass('entropy') : $('body').removeClass('entropy');\n\t\tlet rand = how ? Math.floor(Math.random() * 15) - 7 : 0;\n\t\t$(this).css('transform','rotate(' + rand + 'deg)').removeClass(rotationClasses).addClass('rr' + rand);\n\n        if ($(this).is('.add-tack')){\n\t\t\t$(this).css('margin-left', + (rand / 2) + 'em');\n\t\t}\n\t\tif ($(this).is('.poly-wrap')){\n\t\t\t$(this).removeClass(polyClasses).addClass('poly-' + getRandom(5));\n\t\t\t//$(this).removeClass(polyClasses).addClass('poly-0');\n\t\t}\n\t});\n}\n  */\n  render() {\n    return (\n      <i\n        className=\"fas fa-align-center cleany extra\"\n        onClick={e => {\n          this.toggleEntropy(e);\n        }}\n      >\n        <span className=\"tooltip\" data-title=\"For those with OCD or ADD\"></span>\n      </i>\n    );\n  }\n}\n\nexport default Skewer;\n"]},"metadata":{},"sourceType":"module"}