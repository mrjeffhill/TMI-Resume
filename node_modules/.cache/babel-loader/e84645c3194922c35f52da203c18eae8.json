{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar asnResponse_model_1 = __importDefault(require(\"./model/asnResponse.model\"));\n\nvar lruCache_1 = __importDefault(require(\"./cache/lruCache\"));\n\nvar en_US_json_1 = __importDefault(require(\"../config/en_US.json\"));\n\nvar ipinfo_model_1 = __importDefault(require(\"./model/ipinfo.model\"));\n\nvar IPinfoWrapper = function () {\n  function IPinfoWrapper(token) {\n    this.limitErrorMessage = \"You have exceeded 1,000 requests a day. Visit https://ipinfo.io/account to see your API limits.\";\n    this.token = token;\n    this.countries = en_US_json_1.default;\n    this.cache = new lruCache_1.default();\n  }\n\n  IPinfoWrapper.prototype.lookupIp = function (ip) {\n    var _this = this;\n\n    if (!ip || typeof ip !== \"string\") {\n      throw new Error(\"ip is a required parameter\");\n    }\n\n    var data = this.cache.getIp(ip);\n\n    if (!data) {\n      var url = \"\" + ipinfo_model_1.default.Fqdn + ip;\n      var config_1 = {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + this.token,\n          \"Content-Type\": \"application/json\",\n          \"User-Agent\": \"IPinfoClient/nodejs/1.0\"\n        },\n        method: \"get\",\n        url: \"\" + url\n      };\n      return new Promise(function (resolve, reject) {\n        axios_1.default(config_1).then(function (response) {\n          var ipinfo = new ipinfo_model_1.default(response.data, _this.countries);\n\n          _this.cache.setIp(ip, ipinfo);\n\n          resolve(ipinfo);\n        }).catch(function (error) {\n          if (error.response && error.response.status === 429) {\n            throw new Error(_this.limitErrorMessage);\n          }\n\n          reject(error);\n        });\n      });\n    }\n\n    return new Promise(function (resolve) {\n      resolve(data);\n    });\n  };\n\n  IPinfoWrapper.prototype.lookupASN = function (asn) {\n    var _this = this;\n\n    if (!asn || typeof asn !== \"string\") {\n      throw new Error(\"asn is a required parameter\");\n    }\n\n    var data = this.cache.getAsn(asn);\n\n    if (!data) {\n      var url = \"\" + ipinfo_model_1.default.Fqdn + asn + \"/json\";\n      var config_2 = {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + this.token,\n          \"Content-Type\": \"application/json\",\n          \"User-Agent\": \"IPinfoClient/nodejs/1.0\"\n        },\n        method: \"get\",\n        url: \"\" + url\n      };\n      return new Promise(function (resolve, reject) {\n        axios_1.default(config_2).then(function (response) {\n          var asnResponse = new asnResponse_model_1.default(response.data, _this.countries);\n\n          _this.cache.setAsn(asn, asnResponse);\n\n          resolve(asnResponse);\n        }).catch(function (error) {\n          if (error.response && error.response.status === 429) {\n            reject(Error(_this.limitErrorMessage));\n          }\n\n          reject(error);\n        });\n      });\n    }\n\n    return new Promise(function (resolve) {\n      resolve(data);\n    });\n  };\n\n  return IPinfoWrapper;\n}();\n\nexports.default = IPinfoWrapper;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/node_modules/node-ipinfo/dist/src/ipinfoWrapper.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","axios_1","require","asnResponse_model_1","lruCache_1","en_US_json_1","ipinfo_model_1","IPinfoWrapper","token","limitErrorMessage","countries","default","cache","prototype","lookupIp","ip","_this","Error","data","getIp","url","Fqdn","config_1","headers","Accept","Authorization","method","Promise","resolve","reject","then","response","ipinfo","setIp","catch","error","status","lookupASN","asn","getAsn","config_2","asnResponse","setAsn"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar axios_1 = __importDefault(require(\"axios\"));\nvar asnResponse_model_1 = __importDefault(require(\"./model/asnResponse.model\"));\nvar lruCache_1 = __importDefault(require(\"./cache/lruCache\"));\nvar en_US_json_1 = __importDefault(require(\"../config/en_US.json\"));\nvar ipinfo_model_1 = __importDefault(require(\"./model/ipinfo.model\"));\nvar IPinfoWrapper = (function () {\n    function IPinfoWrapper(token) {\n        this.limitErrorMessage = \"You have exceeded 1,000 requests a day. Visit https://ipinfo.io/account to see your API limits.\";\n        this.token = token;\n        this.countries = en_US_json_1.default;\n        this.cache = new lruCache_1.default();\n    }\n    IPinfoWrapper.prototype.lookupIp = function (ip) {\n        var _this = this;\n        if (!ip || typeof ip !== \"string\") {\n            throw new Error(\"ip is a required parameter\");\n        }\n        var data = this.cache.getIp(ip);\n        if (!data) {\n            var url = \"\" + ipinfo_model_1.default.Fqdn + ip;\n            var config_1 = {\n                headers: {\n                    Accept: \"application/json\",\n                    Authorization: \"Bearer \" + this.token,\n                    \"Content-Type\": \"application/json\",\n                    \"User-Agent\": \"IPinfoClient/nodejs/1.0\",\n                },\n                method: \"get\",\n                url: \"\" + url,\n            };\n            return new Promise(function (resolve, reject) {\n                axios_1.default(config_1)\n                    .then(function (response) {\n                    var ipinfo = new ipinfo_model_1.default(response.data, _this.countries);\n                    _this.cache.setIp(ip, ipinfo);\n                    resolve(ipinfo);\n                })\n                    .catch(function (error) {\n                    if (error.response && error.response.status === 429) {\n                        throw new Error(_this.limitErrorMessage);\n                    }\n                    reject(error);\n                });\n            });\n        }\n        return new Promise(function (resolve) {\n            resolve(data);\n        });\n    };\n    IPinfoWrapper.prototype.lookupASN = function (asn) {\n        var _this = this;\n        if (!asn || typeof asn !== \"string\") {\n            throw new Error(\"asn is a required parameter\");\n        }\n        var data = this.cache.getAsn(asn);\n        if (!data) {\n            var url = \"\" + ipinfo_model_1.default.Fqdn + asn + \"/json\";\n            var config_2 = {\n                headers: {\n                    Accept: \"application/json\",\n                    Authorization: \"Bearer \" + this.token,\n                    \"Content-Type\": \"application/json\",\n                    \"User-Agent\": \"IPinfoClient/nodejs/1.0\",\n                },\n                method: \"get\",\n                url: \"\" + url,\n            };\n            return new Promise(function (resolve, reject) {\n                axios_1.default(config_2)\n                    .then(function (response) {\n                    var asnResponse = new asnResponse_model_1.default(response.data, _this.countries);\n                    _this.cache.setAsn(asn, asnResponse);\n                    resolve(asnResponse);\n                })\n                    .catch(function (error) {\n                    if (error.response && error.response.status === 429) {\n                        reject(Error(_this.limitErrorMessage));\n                    }\n                    reject(error);\n                });\n            });\n        }\n        return new Promise(function (resolve) {\n            resolve(data);\n        });\n    };\n    return IPinfoWrapper;\n}());\nexports.default = IPinfoWrapper;\n"]},"metadata":{},"sourceType":"script"}