{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/sectionTools.js\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { AppData } from \"./appdata\";\n\nclass SectionTools extends React.Component {\n  // ***** access via this.context\n  constructor(props) {\n    super(props);\n    this.state = {\n      printActive: false,\n      editActive: false,\n      toolParent: {}\n    };\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.togglePrint = this.togglePrint.bind(this);\n  }\n\n  componentDidMount() {\n    const toolParent = ReactDOM.findDOMNode(this).closest(\"article\");\n    this.setState({\n      toolParent: toolParent\n    });\n  }\n\n  toggleEdit(event) {\n    console.log(\"toggle edit\");\n    this.state.toolParent.classList.toggle(\"edit-active\");\n    this.setState({\n      editActive: !this.state.editActive\n    });\n  }\n\n  togglePrint(event) {\n    console.log(\"toggle print\");\n    this.state.toolParent.classList.toggle(\"print-me\");\n    this.setState({\n      printActive: !this.state.printActive\n    });\n  } //let { state, dispatch } = React.useContext(AppData);\n\n  /*\n  $(document).on('click', '.res-editable a.can-edit', function(e) {\n  e.preventDefault();\n  });\n  $(document).on('click', 'button.editable', function(e) {\n  let thisSection = $(this).closest('.res-editable');\n  thisSection.toggleClass('edit-active');\n  let isActive = thisSection.hasClass('edit-active');\n  $('.can-edit', thisSection).attr('contentEditable', isActive);\n  $('.can-edit', thisSection).not('#Skills .can-edit')[0].focus();\n  // todo: add revert\n  });\n  // TODO: MAERGE!!!\n  $(document).on('click', 'button.print-basket', function(e) {\n  let thisSection = $(this).closest('.res-editable');\n  thisSection.toggleClass('print-me');\n  });\n  \n  var makeEditable = function(destEl){\n  $.each(destEl, function( i, s ) {\n  $(this).append(printEditTools);\n  });\n  }\n  makeEditable($('#Blurbs>h2, #Doodles>h2, #Objective>h2, #Summary>h2, #Education>h2'));\n  */\n\n\n  render() {\n    const printActiveClass = this.state.printActive ? \"a\" : \"b\";\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"editable\",\n      onClick: e => {\n        this.toggleEdit(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltip\",\n      \"data-title\": \"Turn editing on/off.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"print-basket\",\n      onClick: e => {\n        this.togglePrint(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltip\",\n      \"data-title\": \"Add/Remove this for printing.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Add for Print\")));\n  }\n\n}\n\nSectionTools.contextType = AppData;\n;\nexport default SectionTools;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/sectionTools.js"],"names":["React","ReactDOM","AppData","SectionTools","Component","constructor","props","state","printActive","editActive","toolParent","toggleEdit","bind","togglePrint","componentDidMount","findDOMNode","closest","setState","event","console","log","classList","toggle","render","printActiveClass","e","contextType"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACb;AAE5BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,KADF;AAEXC,MAAAA,UAAU,EAAE,KAFD;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDE,EAAAA,iBAAiB,GAAE;AACjB,UAAMJ,UAAU,GAAGT,QAAQ,CAACc,WAAT,CAAqB,IAArB,EAA2BC,OAA3B,CAAmC,SAAnC,CAAnB;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,UAAU,EAAEA;AAAd,KAAd;AACD;;AACDC,EAAAA,UAAU,CAACO,KAAD,EAAO;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAKb,KAAL,CAAWG,UAAX,CAAsBW,SAAtB,CAAgCC,MAAhC,CAAuC,aAAvC;AACA,SAAKL,QAAL,CAAc;AAAER,MAAAA,UAAU,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAA1B,KAAd;AACH;;AACDI,EAAAA,WAAW,CAACK,KAAD,EAAO;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAKb,KAAL,CAAWG,UAAX,CAAsBW,SAAtB,CAAgCC,MAAhC,CAAuC,UAAvC;AACA,SAAKL,QAAL,CAAc;AAAET,MAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3B,KAAd;AACH,GA1BwC,CA2BzC;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BAe,EAAAA,MAAM,GAAE;AAER,UAAMC,gBAAgB,GAAG,KAAKjB,KAAL,CAAWC,WAAX,GACvB,GADuB,GAEvB,GAFF;AAIE,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAEiB,CAAC,IAAI;AACrC,aAAKd,UAAL,CAAgBc,CAAhB;AACD,OAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,oBAAW,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,eAQE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAEA,CAAC,IAAI;AACzC,aAAKZ,WAAL,CAAiBY,CAAjB;AACD,OAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,oBAAW,+BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CARF,CADF;AAkBD;;AAjFwC;;AAArCtB,Y,CACCuB,W,GAAcxB,O;AAiFpB;AAED,eAAeC,YAAf","sourcesContent":["import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { AppData } from \"./appdata\";\n\nclass SectionTools extends React.Component {\nstatic contextType = AppData; // ***** access via this.context\n\n  constructor(props){\n    super(props);\n    this.state = {\n      printActive: false,\n      editActive: false,\n      toolParent: {}\n    };\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.togglePrint = this.togglePrint.bind(this);\n  }\n  componentDidMount(){\n    const toolParent = ReactDOM.findDOMNode(this).closest(\"article\");\n    this.setState({ toolParent: toolParent });\n  }\n  toggleEdit(event){\n      console.log(\"toggle edit\");\n      this.state.toolParent.classList.toggle(\"edit-active\");\n      this.setState({ editActive: !this.state.editActive });\n  }\n  togglePrint(event){\n      console.log(\"toggle print\");\n      this.state.toolParent.classList.toggle(\"print-me\");\n      this.setState({ printActive: !this.state.printActive });\n  }\n  //let { state, dispatch } = React.useContext(AppData);\n  /*\n$(document).on('click', '.res-editable a.can-edit', function(e) {\n\te.preventDefault();\n});\n$(document).on('click', 'button.editable', function(e) {\n\tlet thisSection = $(this).closest('.res-editable');\n\tthisSection.toggleClass('edit-active');\n\tlet isActive = thisSection.hasClass('edit-active');\n\t$('.can-edit', thisSection).attr('contentEditable', isActive);\n\t$('.can-edit', thisSection).not('#Skills .can-edit')[0].focus();\n\t// todo: add revert\n});\n// TODO: MAERGE!!!\n$(document).on('click', 'button.print-basket', function(e) {\n\tlet thisSection = $(this).closest('.res-editable');\n\tthisSection.toggleClass('print-me');\n});\n\n\n\nvar makeEditable = function(destEl){\n\t$.each(destEl, function( i, s ) {\n\t\t$(this).append(printEditTools);\n\t});\n}\nmakeEditable($('#Blurbs>h2, #Doodles>h2, #Objective>h2, #Summary>h2, #Education>h2'));\n  */\n\n\n  render(){\n\n  const printActiveClass = this.state.printActive\n  ? \"a\"\n  : \"b\"\n\n    return (\n      <nav>\n        <button className=\"editable\" onClick={e => {\n              this.toggleEdit(e);\n            }}>\n          <span className=\"tooltip\" data-title=\"Turn editing on/off.\">\n            Edit\n          </span>\n        </button>\n        <button className=\"print-basket\" onClick={e => {\n              this.togglePrint(e);\n            }}>\n          <span className=\"tooltip\" data-title=\"Add/Remove this for printing.\">\n            Add for Print\n          </span>\n        </button>\n      </nav>\n    );\n  }\n};\n\nexport default SectionTools;\n"]},"metadata":{},"sourceType":"module"}