{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/appdata.js\";\nimport * as React from \"react\";\nimport Resume from \"../assets/js/resume\";\nconst resumeData = Resume;\nlet AppData = React.createContext();\nlet initialState = {\n  resume: resumeData,\n  version: \"0.6.6.6 OMeGa\",\n  tts: false,\n  themes: [\"default\", \"agile\"],\n  currentTheme: \"\",\n  introVisible: false,\n  menuVisible: false,\n  qsObj: false,\n  urlParams: new URLSearchParams(window.location.search),\n  rotationClasses: \"rr-7 rr-6 rr-5 rr-4 rr-3 rr-2 rr-1 rr0 rr1 rr2 rr3 rr4 rr5 rr6 rr7\",\n  polyClasses: \"poly-0 poly-1 poly-2 poly-3 poly-4\",\n  $carousel: null,\n  isFlickity: false,\n  map: null,\n  myLatLng: {\n    lat: 42.4316604,\n    lng: -83.484051\n  },\n  testLL: {\n    lat: 42.279594,\n    lng: -83.732124\n  },\n  // AA\n  tabTypes: [\"chart\", \"table\", \"stars\", \"info\"],\n  tabIcons: [\"chart-pie\", \"table\", \"star-half-alt\", \"info-circle\"],\n  tabCounter: 0,\n  toggleMenu: () => {\n    this.setState({\n      menuVisible: !this.menuVisible\n    });\n  },\n  toggleIntro: () => {\n    this.setState({\n      introVisible: !this.introVisible\n    });\n  },\n  myGlobalFunction: e => {\n    console.log(\"global function called for: \" + e.target.nodeName);\n    this.introVisible = !this.introVisible;\n  },\n  increment: () => {\n    this.setState({\n      num: this.state.num + 1\n    });\n  },\n  decrement: () => {\n    this.setState({\n      num: this.state.num - 1\n    });\n  },\n  reset: () => {\n    this.setState({\n      num: this.num\n    });\n  },\n  whoWantsABodyMassage: () => {\n    document.body.classList.add(\"loaded\");\n    document.body.classList.remove(\"loading\");\n  }\n};\n\ntoggleMenu = () => {\n  this.setState({\n    menuVisible: !this.menuVisible\n  });\n};\n\ntoggleIntro = () => {\n  this.setState({\n    introVisible: !this.introVisible\n  });\n};\n\nmyGlobalFunction = e => {\n  console.log(\"global function called for: \" + e.target.nodeName);\n  this.introVisible = !this.introVisible;\n};\n\nincrement = () => {\n  this.setState({\n    num: this.state.num + 1\n  });\n};\n\ndecrement = () => {\n  this.setState({\n    num: this.state.num - 1\n  });\n};\n\nreset = () => {\n  this.setState({\n    num: this.num\n  });\n};\n\nwhoWantsABodyMassage = () => {\n  document.body.classList.add(\"loaded\");\n  document.body.classList.remove(\"loading\");\n};\n\nlet reducer = (state = initialState, action) => {\n  console.log(action.payload);\n\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n\n    case \"increment\":\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case \"decrement\":\n      return { ...state,\n        count: state.count - 1\n      };\n\n    case \"set-color\":\n      return { ...state,\n        currentColor: action.payload\n      };\n\n    case \"increment-tab-index\":\n      return { ...state,\n        tabCounter: state.tabCounter + 1\n      };\n\n    case \"toggle-intro\":\n      return { ...state,\n        introVisible: !state.introVisible\n      };\n\n    case \"toggle-menu\":\n      return { ...state,\n        menuVisible: !state.menuVisible\n      };\n\n    case \"toggle-theme\":\n      console.log(action.payload); // bool: !this.state.bool\n      // hasClass(element, className)\n      //return document.body.classList.toggle(\"agile\", state.isAgile);\n\n      return { ...state,\n        currentTheme: action.payload\n      };\n\n    default:\n      return null;\n  }\n};\n\nfunction AppDataProvider(props) {\n  let [state, dispatch] = React.useReducer(reducer, initialState);\n  let value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/React.createElement(AppData.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }\n  }, props.children);\n}\n\nlet AppDataConsumer = AppData.Consumer;\nexport { AppData, AppDataProvider, AppDataConsumer };","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/appdata.js"],"names":["React","Resume","resumeData","AppData","createContext","initialState","resume","version","tts","themes","currentTheme","introVisible","menuVisible","qsObj","urlParams","URLSearchParams","window","location","search","rotationClasses","polyClasses","$carousel","isFlickity","map","myLatLng","lat","lng","testLL","tabTypes","tabIcons","tabCounter","toggleMenu","setState","toggleIntro","myGlobalFunction","e","console","log","target","nodeName","increment","num","state","decrement","reset","whoWantsABodyMassage","document","body","classList","add","remove","reducer","action","payload","type","count","currentColor","AppDataProvider","props","dispatch","useReducer","value","children","AppDataConsumer","Consumer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Resume from \"../assets/js/resume\";\n\nconst resumeData = Resume;\n\nlet AppData = React.createContext();\n\nlet initialState = {\n  resume: resumeData,\n  version: \"0.6.6.6 OMeGa\",\n  tts: false,\n  themes: [\"default\", \"agile\"],\n  currentTheme: \"\",\n  introVisible: false,\n  menuVisible: false,\n  qsObj: false,\n  urlParams: new URLSearchParams(window.location.search),\n  rotationClasses:\n    \"rr-7 rr-6 rr-5 rr-4 rr-3 rr-2 rr-1 rr0 rr1 rr2 rr3 rr4 rr5 rr6 rr7\",\n  polyClasses: \"poly-0 poly-1 poly-2 poly-3 poly-4\",\n  $carousel: null,\n  isFlickity: false,\n  map: null,\n  myLatLng: { lat: 42.4316604, lng: -83.484051 },\n  testLL: { lat: 42.279594, lng: -83.732124 }, // AA\n  tabTypes: [\"chart\", \"table\", \"stars\", \"info\"],\n  tabIcons: [\"chart-pie\", \"table\", \"star-half-alt\", \"info-circle\"],\n  tabCounter: 0,\n\n  toggleMenu: () => {\n    this.setState({ menuVisible: !this.menuVisible });\n  },\n  toggleIntro: () => {\n    this.setState({ introVisible: !this.introVisible });\n  },\n  myGlobalFunction: e => {\n    console.log(\"global function called for: \" + e.target.nodeName);\n    this.introVisible = !this.introVisible;\n  },\n  increment: () => {\n    this.setState({ num: this.state.num + 1 });\n  },\n  decrement: () => {\n    this.setState({ num: this.state.num - 1 });\n  },\n  reset: () => {\n    this.setState({ num: this.num });\n  },\n  whoWantsABodyMassage: () => {\n    document.body.classList.add(\"loaded\");\n    document.body.classList.remove(\"loading\");\n  }\n};\n\ntoggleMenu = () => {\n  this.setState({ menuVisible: !this.menuVisible });\n};\ntoggleIntro = () => {\n  this.setState({ introVisible: !this.introVisible });\n};\nmyGlobalFunction = e => {\n  console.log(\"global function called for: \" + e.target.nodeName);\n  this.introVisible = !this.introVisible;\n};\nincrement = () => {\n  this.setState({ num: this.state.num + 1 });\n};\ndecrement = () => {\n  this.setState({ num: this.state.num - 1 });\n};\nreset = () => {\n  this.setState({ num: this.num });\n};\nwhoWantsABodyMassage = () => {\n  document.body.classList.add(\"loaded\");\n  document.body.classList.remove(\"loading\");\n};\n\nlet reducer = (state = initialState, action) => {\n  console.log(action.payload);\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case \"increment\":\n      return { ...state, count: state.count + 1 };\n    case \"decrement\":\n      return { ...state, count: state.count - 1 };\n    case \"set-color\":\n      return { ...state, currentColor: action.payload };\n    case \"increment-tab-index\":\n      return { ...state, tabCounter: state.tabCounter + 1 };\n    case \"toggle-intro\":\n      return { ...state, introVisible: !state.introVisible };\n    case \"toggle-menu\":\n      return { ...state, menuVisible: !state.menuVisible };\n    case \"toggle-theme\":\n      console.log(action.payload);\n      // bool: !this.state.bool\n      // hasClass(element, className)\n      //return document.body.classList.toggle(\"agile\", state.isAgile);\n      return { ...state, currentTheme: action.payload };\n    default:\n      return null;\n  }\n};\n\nfunction AppDataProvider(props) {\n  let [state, dispatch] = React.useReducer(reducer, initialState);\n  let value = { state, dispatch };\n\n  return <AppData.Provider value={value}>{props.children}</AppData.Provider>;\n}\n\nlet AppDataConsumer = AppData.Consumer;\n\nexport { AppData, AppDataProvider, AppDataConsumer };\n"]},"metadata":{},"sourceType":"module"}