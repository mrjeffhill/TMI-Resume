{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/intro.js\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppData } from \"./appdata\";\nimport Condensificator from \"./condensificator\";\nimport IntroContent from \"./introContent\";\n\nclass Intro extends React.Component {\n  // ***** access via this.context\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.state = {\n      introVisible: false,\n      steps: [],\n      headers: [],\n      totalSteps: 0,\n      currentStep: 0,\n      nextStepper: null,\n      previousStepper: null,\n      statusEl: null,\n      statusText: \"loading...\",\n      nextTextEl: null,\n      prevTextEl: null,\n      nextText: \"\",\n      previousText: \"\"\n    }; //this.closeIntro = this.closeIntro.bind(this);\n\n    this.nextStep = this.nextStep.bind(this);\n    this.previousStep = this.previousStep.bind(this);\n    this.updateStatus = this.updateStatus.bind(this);\n  }\n\n  componentDidMount() {\n    const widget = ReactDOM.findDOMNode(this);\n    const controls = widget.getElementsByClassName(\"step-o-matic\")[0];\n    const allSteps = widget.getElementsByClassName(\"step\");\n    const allHeaders = widget.getElementsByClassName(\"step-title\");\n    const nextEl = controls.getElementsByClassName(\"step-next\")[0];\n    const prevEl = controls.getElementsByClassName(\"step-prev\")[0];\n    const nextTextEl = nextEl.querySelector(\"i\");\n    const prevTextEl = prevEl.querySelector(\"i\");\n    const statusEl = controls.getElementsByClassName(\"status\")[0];\n    let statusText = this.state.currentStep + 1 + \" / \" + allSteps.length; //console.log(allHeaders[0]);\n\n    this.setState({\n      totalSteps: allSteps.length,\n      steps: allSteps,\n      headers: allHeaders,\n      nextText: allHeaders[1].innerText,\n      nextStepper: nextEl,\n      previousStepper: prevEl,\n      statusEl: statusEl,\n      statusText: statusText,\n      nextTextEl: nextTextEl,\n      prevTextEl: prevTextEl\n    }); //this.updateStatus();\n  }\n\n  componentWillUpdate(nextProps, nextState) {}\n\n  componentDidUpdate(prevProps, prevState) {} //this.updateStatus();\n  //console.log(\"didUpdate - currentStep is now: \" + this.state.currentStep);\n\n  /*\n  closeIntro(event) {\n    const intro = document.getElementById(\"HEY\");\n    const menuItem = document.getElementsByClassName(\"btfu\")[0];\n    intro.classList.remove(\"active\");\n    menuItem.classList.remove(\"active\");\n    this.setState({ introVisible: false });\n  }\n  */\n\n\n  nextStep(event) {\n    event.preventDefault();\n    let isLast = this.state.currentStep + 1 === this.state.totalSteps; //console.log(\"isLast?: \" + isLast);\n\n    if (!isLast) {\n      let toStep = this.state.currentStep + 1; //console.log(\"go to step: \" + toStep);\n\n      this.state.steps[this.state.currentStep].classList.remove(\"current\");\n      this.state.steps[toStep].classList.add(\"current\");\n      this.setState({\n        currentStep: toStep\n      });\n      this.updateStatus(toStep);\n    }\n  }\n\n  previousStep(event) {\n    event.preventDefault();\n    let isFirst = this.state.currentStep + 1 === 1; //console.log(\"isFirst?: \" + isFirst);\n\n    if (!isFirst) {\n      let toStep = this.state.currentStep - 1; //console.log(\"go to step: \" + toStep);\n\n      this.state.steps[this.state.currentStep].classList.remove(\"current\");\n      this.state.steps[toStep].classList.add(\"current\");\n      this.setState({\n        currentStep: toStep\n      });\n      this.updateStatus(toStep);\n    }\n  }\n\n  updateStatus(toStep) {\n    //let currentStep = this.state.currentStep;\n    let currentStep = toStep; //console.log(\"updating status for step: \" + currentStep);\n\n    let isLast = currentStep + 1 === this.state.totalSteps;\n    let isFirst = currentStep + 1 === 1;\n    let nextText,\n        previousText = \"\";\n\n    if (!isLast) {\n      this.state.nextStepper.classList.remove(\"visually-hidden\");\n      nextText = this.state.headers[currentStep + 1].innerText;\n    } else {\n      this.state.nextStepper.classList.add(\"visually-hidden\");\n    }\n\n    if (!isFirst) {\n      this.state.previousStepper.classList.remove(\"visually-hidden\");\n      previousText = this.state.headers[currentStep - 1].innerText;\n    } else {\n      this.state.previousStepper.classList.add(\"visually-hidden\");\n    }\n\n    let statusText = currentStep + 1 + \" / \" + this.state.totalSteps;\n    this.setState({\n      statusText: statusText,\n      nextText: nextText,\n      previousText: previousText\n    });\n  }\n\n  render() {\n    //console.log(this.context.introVisible);\n    let introData = IntroContent.introData;\n    const context = this.context;\n    const introActiveClass = context.introVisible ? \"step-off active\" : \"step-off\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"HEY\",\n      \"data-current-section\": \"1\",\n      className: introActiveClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"close-the-hey test-me\",\n      \"data-test-name\": \"Intro: Close\",\n      \"data-test-cat\": \"Intro Nav\",\n      onClick: e => {\n        //this.closeIntro(e);\n        context.toggleIntro(e, false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"step-o-matic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, \"HEY!\", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"step-prev test-me visually-hidden\",\n      \"data-test-name\": \"Intro: Previous\",\n      \"data-test-cat\": \"Intro Nav\",\n      onClick: e => {\n        this.previousStep(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, \"Back to: \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 22\n      }\n    }, this.state.previousText)), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"step-next test-me\",\n      \"data-test-name\": \"Intro: Next\",\n      \"data-test-cat\": \"Intro Nav\",\n      onClick: e => {\n        this.nextStep(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, \"Next up: \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 22\n      }\n    }, this.state.nextText)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, this.state.statusText)), introData.map((slide, index) => {\n      var slideClass = \"step section-\" + index;\n      slideClass += index === 0 ? \" current\" : \"\";\n      return /*#__PURE__*/React.createElement(\"section\", {\n        key: index,\n        className: slideClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"step-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }, slide.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pretty-scroll\",\n        dangerouslySetInnerHTML: {\n          __html: slide.text\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Condensificator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }\n      }));\n    }));\n  }\n\n}\n\nIntro.contextType = AppData;\nexport default Intro;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/intro.js"],"names":["React","ReactDOM","AppData","Condensificator","IntroContent","Intro","Component","constructor","props","state","introVisible","steps","headers","totalSteps","currentStep","nextStepper","previousStepper","statusEl","statusText","nextTextEl","prevTextEl","nextText","previousText","nextStep","bind","previousStep","updateStatus","componentDidMount","widget","findDOMNode","controls","getElementsByClassName","allSteps","allHeaders","nextEl","prevEl","querySelector","length","setState","innerText","componentWillUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","event","preventDefault","isLast","toStep","classList","remove","add","isFirst","render","introData","context","introActiveClass","e","toggleIntro","map","slide","index","slideClass","title","__html","text","contextType"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppData } from \"./appdata\";\nimport Condensificator from \"./condensificator\";\nimport IntroContent from \"./introContent\";\n\nclass Intro extends React.Component {\n  static contextType = AppData; // ***** access via this.context\n\n  state = {};\n  constructor(props) {\n    super(props);\n    this.state = {\n      introVisible: false,\n      steps: [],\n      headers: [],\n      totalSteps: 0,\n      currentStep: 0,\n      nextStepper: null,\n      previousStepper: null,\n      statusEl: null,\n      statusText: \"loading...\",\n      nextTextEl: null,\n      prevTextEl: null,\n      nextText: \"\",\n      previousText: \"\"\n    };\n\n    //this.closeIntro = this.closeIntro.bind(this);\n    this.nextStep = this.nextStep.bind(this);\n    this.previousStep = this.previousStep.bind(this);\n    this.updateStatus = this.updateStatus.bind(this);\n  }\n\n  componentDidMount() {\n    const widget = ReactDOM.findDOMNode(this);\n    const controls = widget.getElementsByClassName(\"step-o-matic\")[0];\n    const allSteps = widget.getElementsByClassName(\"step\");\n    const allHeaders = widget.getElementsByClassName(\"step-title\");\n    const nextEl = controls.getElementsByClassName(\"step-next\")[0];\n    const prevEl = controls.getElementsByClassName(\"step-prev\")[0];\n    const nextTextEl = nextEl.querySelector(\"i\");\n    const prevTextEl = prevEl.querySelector(\"i\");\n    const statusEl = controls.getElementsByClassName(\"status\")[0];\n    let statusText = this.state.currentStep + 1 + \" / \" + allSteps.length;\n    //console.log(allHeaders[0]);\n    this.setState({\n      totalSteps: allSteps.length,\n      steps: allSteps,\n      headers: allHeaders,\n      nextText: allHeaders[1].innerText,\n      nextStepper: nextEl,\n      previousStepper: prevEl,\n      statusEl: statusEl,\n      statusText: statusText,\n      nextTextEl: nextTextEl,\n      prevTextEl: prevTextEl\n    });\n    //this.updateStatus();\n  }\n  componentWillUpdate(nextProps, nextState) {}\n  componentDidUpdate(prevProps, prevState) {\n    //this.updateStatus();\n    //console.log(\"didUpdate - currentStep is now: \" + this.state.currentStep);\n  }\n  /*\n  closeIntro(event) {\n    const intro = document.getElementById(\"HEY\");\n    const menuItem = document.getElementsByClassName(\"btfu\")[0];\n    intro.classList.remove(\"active\");\n    menuItem.classList.remove(\"active\");\n    this.setState({ introVisible: false });\n  }\n  */\n  nextStep(event) {\n    event.preventDefault();\n    let isLast = this.state.currentStep + 1 === this.state.totalSteps;\n    //console.log(\"isLast?: \" + isLast);\n    if (!isLast) {\n      let toStep = this.state.currentStep + 1;\n      //console.log(\"go to step: \" + toStep);\n      this.state.steps[this.state.currentStep].classList.remove(\"current\");\n      this.state.steps[toStep].classList.add(\"current\");\n      this.setState({\n        currentStep: toStep\n      });\n      this.updateStatus(toStep);\n    }\n  }\n  previousStep(event) {\n    event.preventDefault();\n    let isFirst = this.state.currentStep + 1 === 1;\n    //console.log(\"isFirst?: \" + isFirst);\n    if (!isFirst) {\n      let toStep = this.state.currentStep - 1;\n      //console.log(\"go to step: \" + toStep);\n      this.state.steps[this.state.currentStep].classList.remove(\"current\");\n      this.state.steps[toStep].classList.add(\"current\");\n      this.setState({\n        currentStep: toStep\n      });\n      this.updateStatus(toStep);\n    }\n  }\n  updateStatus(toStep) {\n    //let currentStep = this.state.currentStep;\n    let currentStep = toStep;\n    //console.log(\"updating status for step: \" + currentStep);\n    let isLast = currentStep + 1 === this.state.totalSteps;\n    let isFirst = currentStep + 1 === 1;\n    let nextText,\n      previousText = \"\";\n    if (!isLast) {\n      this.state.nextStepper.classList.remove(\"visually-hidden\");\n      nextText = this.state.headers[currentStep + 1].innerText;\n    } else {\n      this.state.nextStepper.classList.add(\"visually-hidden\");\n    }\n    if (!isFirst) {\n      this.state.previousStepper.classList.remove(\"visually-hidden\");\n      previousText = this.state.headers[currentStep - 1].innerText;\n    } else {\n      this.state.previousStepper.classList.add(\"visually-hidden\");\n    }\n    let statusText = currentStep + 1 + \" / \" + this.state.totalSteps;\n\n    this.setState({\n      statusText: statusText,\n      nextText: nextText,\n      previousText: previousText\n    });\n  }\n\n  render() {\n    //console.log(this.context.introVisible);\n    let introData = IntroContent.introData;\n    const context = this.context;\n\n    const introActiveClass = context.introVisible\n      ? \"step-off active\"\n      : \"step-off\";\n\n    return (\n      <div id=\"HEY\" data-current-section=\"1\" className={introActiveClass}>\n        <a\n          href=\"#\"\n          className=\"close-the-hey test-me\"\n          data-test-name=\"Intro: Close\"\n          data-test-cat=\"Intro Nav\"\n          onClick={e => {\n            //this.closeIntro(e);\n            context.toggleIntro(e, false);\n          }}\n        >\n          Close\n        </a>\n        <h2 className=\"step-o-matic\">\n          HEY!\n          <a\n            href=\"#\"\n            className=\"step-prev test-me visually-hidden\"\n            data-test-name=\"Intro: Previous\"\n            data-test-cat=\"Intro Nav\"\n            onClick={e => {\n              this.previousStep(e);\n            }}\n          >\n            Back to: <i>{this.state.previousText}</i>\n          </a>\n          <a\n            href=\"#\"\n            className=\"step-next test-me\"\n            data-test-name=\"Intro: Next\"\n            data-test-cat=\"Intro Nav\"\n            onClick={e => {\n              this.nextStep(e);\n            }}\n          >\n            Next up: <i>{this.state.nextText}</i>\n          </a>\n          <span className=\"status\">{this.state.statusText}</span>\n        </h2>\n\n        {introData.map((slide, index) => {\n          var slideClass = \"step section-\" + index;\n          slideClass += index === 0 ? \" current\" : \"\";\n          return (\n            <section key={index} className={slideClass}>\n              <header className=\"step-title\">{slide.title}</header>\n              <div\n                className=\"pretty-scroll\"\n                dangerouslySetInnerHTML={{ __html: slide.text }}\n              ></div>\n              <Condensificator />\n            </section>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Intro;\n"]},"metadata":{},"sourceType":"module"}