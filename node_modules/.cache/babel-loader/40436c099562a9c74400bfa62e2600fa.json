{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/debugger.js\";\nimport * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n\nconst axios = require(\"axios\").default;\n\nclass Debugger extends React.Component {\n  // ***** access via this.context\n  constructor(props) {\n    super(props);\n\n    this.updateDimensions = () => {\n      var screenData = helpers.getScreenData();\n      this.setState({\n        screenData: helpers.parseOmatic(screenData)\n      });\n    };\n\n    this.state = {\n      ua: {},\n      ip: \"\",\n      ipData: {},\n      parsedUa: \"\",\n      parsedIp: \"\",\n      screenData: \"\"\n    };\n    this.escFunction = this.escFunction.bind(this);\n  }\n\n  escFunction(event) {\n    if (event.keyCode === 27) {\n      //Do whatever when esc is pressed\n      alert(this.state.ip);\n    }\n  }\n\n  componentDidMount() {\n    var userIp = \"\";\n    var ipAddress = \"\";\n    var ipData = {};\n    const self = this;\n\n    const http = require('http');\n\n    var uaGetString = \"http://api.userstack.com/detect?access_key=b301331f9e5761edf368d241475b4836&ua=\" + navigator.userAgent;\n    axios.get(uaGetString).then(function (response) {\n      console.log(response);\n      self.setState({\n        ua: response.data,\n        parsedUa: helpers.parseOmatic(response.data)\n      });\n    }).catch(function (error) {\n      console.log(error);\n      self.setState({\n        ua: false\n      });\n    }).finally(function () {\n      // always executed\n      helpers.allParsed = \"\";\n      helpers.childCounter = 0;\n    });\n    http.get({\n      'host': 'api.ipify.org',\n      'port': 80,\n      'path': '/'\n    }, function (resp) {\n      resp.on('data', function (ip) {\n        console.log(\"My public IP address is: \" + ip);\n        var ipGetString = \"http://api.ipstack.com/\" + ip + \"?access_key=440420267b2d228f92803e8a2d074666\";\n        axios.get(ipGetString).then(function (response) {\n          console.log(response);\n          self.setState({\n            ip: response.data.ip,\n            ipData: response.data,\n            parsedIp: helpers.parseOmatic(response.data)\n          });\n        }).catch(function (error) {\n          console.log(error);\n          self.setState({\n            ip: false,\n            ipData: false\n          });\n        }).finally(function () {\n          // always executed\n          helpers.allParsed = \"\";\n          helpers.childCounter = 0;\n        });\n      });\n    });\n    var screenData = helpers.getScreenData();\n    this.setState({\n      screenData: helpers.parseOmatic(screenData)\n    });\n    document.addEventListener(\"keydown\", this.escFunction, false);\n    window.addEventListener('resize', this.updateDimensions);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n  render() {\n    //console.log(\"rendering...\");\n    const context = this.context;\n    const debuggerClass = context.debuggerVisible ? \"res-user-data active\" : \"res-user-data\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: debuggerClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"article\", {\n      className: \"pretty-scroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, this.state && this.state.parsedUa && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \"User Agent Data\"), /*#__PURE__*/React.createElement(\"dl\", {\n      className: \"parsed-ua\",\n      dangerouslySetInnerHTML: {\n        __html: this.state.parsedUa\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    })), this.state && this.state.parsedIp && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, \"IP Data for ( \", this.state.ip, \" )\"), /*#__PURE__*/React.createElement(\"dl\", {\n      className: \"parsed-ip\",\n      dangerouslySetInnerHTML: {\n        __html: this.state.parsedIp\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    })), this.state && !this.state.ip && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"IP Data for ( BLOCKED )\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"Your VPN has successfully prevented my IP lookup! ... Or I'm just not trying hard enough.\")), this.state && this.state.screenData && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Screen Data\"), /*#__PURE__*/React.createElement(\"dl\", {\n      className: \"parsed-screen\",\n      dangerouslySetInnerHTML: {\n        __html: this.state.screenData\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nDebugger.contextType = AppData;\nexport default Debugger;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/debugger.js"],"names":["React","AppData","helpers","axios","require","default","Debugger","Component","constructor","props","updateDimensions","screenData","getScreenData","setState","parseOmatic","state","ua","ip","ipData","parsedUa","parsedIp","escFunction","bind","event","keyCode","alert","componentDidMount","userIp","ipAddress","self","http","uaGetString","navigator","userAgent","get","then","response","console","log","data","catch","error","finally","allParsed","childCounter","resp","on","ipGetString","document","addEventListener","window","componentWillUnmount","removeEventListener","render","context","debuggerClass","debuggerVisible","__html","contextType"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n\nconst axios = require(\"axios\").default;\n\nclass Debugger extends React.Component {\nstatic contextType = AppData; // ***** access via this.context\n\n  constructor(props){\n    super(props);\n    this.state = {\n      ua: {},\n      ip: \"\",\n      ipData: {},\n      parsedUa: \"\",\n      parsedIp: \"\",\n      screenData: \"\"\n    };\n    this.escFunction = this.escFunction.bind(this);\n  }\n  escFunction(event){\n    if(event.keyCode === 27) {\n      //Do whatever when esc is pressed\n      alert(this.state.ip);\n    }\n  }\n  updateDimensions = () => {\n    var screenData = helpers.getScreenData();\n    this.setState({ screenData: helpers.parseOmatic(screenData) });\n  };\n\n  componentDidMount(){\n    var userIp = \"\";\n    var ipAddress = \"\";\n    var ipData = {};\n    const self = this;\n    const http = require('http');\n\n    var uaGetString = \"http://api.userstack.com/detect?access_key=b301331f9e5761edf368d241475b4836&ua=\" + navigator.userAgent;\n    axios.get(uaGetString)\n    .then(function (response) {\n        console.log(response);\n        self.setState({ ua: response.data, parsedUa: helpers.parseOmatic(response.data) });\n    })\n    .catch(function (error) {\n        console.log(error);\n        self.setState({ ua: false })\n    })\n    .finally(function () {\n        // always executed\n        helpers.allParsed = \"\";\n        helpers.childCounter = 0;\n    });\n    \n    http.get({'host': 'api.ipify.org', 'port': 80, 'path': '/'}, function(resp) {\n      resp.on('data', function(ip) {\n        console.log(\"My public IP address is: \" + ip);\n\n        var ipGetString = \"http://api.ipstack.com/\" + ip + \"?access_key=440420267b2d228f92803e8a2d074666\"\n        axios.get(ipGetString)\n        .then(function (response) {\n            console.log(response);\n\n            self.setState({ ip: response.data.ip, ipData: response.data, parsedIp: helpers.parseOmatic(response.data) })\n        })\n        .catch(function (error) {\n            console.log(error);\n            self.setState({ ip: false, ipData: false })\n        })\n        .finally(function () {\n            // always executed\n            helpers.allParsed = \"\";\n            helpers.childCounter = 0;\n        });\n\n      });\n    });\n\n    var screenData = helpers.getScreenData();\n    this.setState({ screenData: helpers.parseOmatic(screenData) });\n\n    document.addEventListener(\"keydown\", this.escFunction, false);\n    window.addEventListener('resize', this.updateDimensions);\n  }\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n  render(){\n      //console.log(\"rendering...\");\n    const context = this.context;\n    const debuggerClass = context.debuggerVisible\n      ? \"res-user-data active\"\n      : \"res-user-data\";\n\n    return (   \n        <div className={debuggerClass}>\n            <article className=\"pretty-scroll\">\n                { this.state && this.state.parsedUa && \n                    <div className=\"panel-col\">\n                        <h4>User Agent Data</h4>\n                        <dl className=\"parsed-ua\" dangerouslySetInnerHTML={{ __html: this.state.parsedUa }}></dl>\n                    </div> }\n                { this.state && this.state.parsedIp && \n                    <div className=\"panel-col\">\n                        <h4>IP Data for ( {this.state.ip} )</h4>\n                        <dl className=\"parsed-ip\" dangerouslySetInnerHTML={{ __html: this.state.parsedIp }}></dl>\n                    </div> }\n                { this.state && !this.state.ip && \n                    <div className=\"panel-col\">\n                        <h4>IP Data for ( BLOCKED )</h4>\n                        <p>Your VPN has successfully prevented my IP lookup! ... Or I'm just not trying hard enough.</p>\n                    </div> }\n                { this.state && this.state.screenData && \n                    <div className=\"panel-col\">\n                        <h4>Screen Data</h4>\n                        <dl className=\"parsed-screen\" dangerouslySetInnerHTML={{ __html: this.state.screenData }}></dl>\n                    </div> }\n            </article>\n        </div>\n    )\n  }\n}\n\nexport default Debugger;"]},"metadata":{},"sourceType":"module"}