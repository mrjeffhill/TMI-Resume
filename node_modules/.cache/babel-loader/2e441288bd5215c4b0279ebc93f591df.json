{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/condensificator.js\";\nimport * as React from \"react\";\nimport { AppData } from \"./appdata\";\n\nclass Condensificator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCondensed: false,\n      offText: `<i className=\"fas fa-eye-slash\"></i> Brevity Please`,\n      onText: `<i class=\"fas fa-eye\"></i> Oh that\\'s novel. Now put it back.`,\n      currentText: this.offText\n    };\n    this.condensify = this.condensify.bind(this);\n  }\n\n  condensify(event) {\n    const step = event.target.closest(\"section.step\");\n    const stepCondensed = event.target.closest(\"section.step.condensed\");\n\n    if (this.state.isCondensed) {\n      this.setState({\n        currentText: this.state.offText\n      });\n      step.classList.remove(\"condensed\");\n    } else {\n      this.setState({\n        currentText: this.state.onText\n      });\n      step.classList.add(\"condensed\");\n    }\n\n    this.setState({\n      isCondensed: !this.state.isCondensed\n    });\n  }\n  /*\n  $(document).on('click', '.condensificator', function(e) {\n  // so hacky!\n  var origText = '';\n  var altText = '';\n  $(this).closest('.step').toggleClass('condensed');\n  $(this).closest('.condensed')? $(this).html(altText) : $(this).html(origText) ;\n  });\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"condensificator test-me\",\n      \"data-test-name\": \"Intro: Condense Slide 1\",\n      \"data-test-cat\": \"Intro Nav\",\n      dangerouslySetInnerHTML: {\n        __html: this.state.currentText\n      },\n      onClick: e => {\n        this.condensify(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Condensificator;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/condensificator.js"],"names":["React","AppData","Condensificator","Component","constructor","props","state","isCondensed","offText","onText","currentText","condensify","bind","event","step","target","closest","stepCondensed","setState","classList","remove","add","render","__html","e"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,KADF;AAEXC,MAAAA,OAAO,EAAG,qDAFC;AAGXC,MAAAA,MAAM,EAAG,+DAHE;AAIXC,MAAAA,WAAW,EAAE,KAAKF;AAJP,KAAb;AAMA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,UAAU,CAACE,KAAD,EAAQ;AAChB,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,cAArB,CAAb;AACA,UAAMC,aAAa,GAAGJ,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,wBAArB,CAAtB;;AAEA,QAAI,KAAKV,KAAL,CAAWC,WAAf,EAA4B;AAC1B,WAAKW,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWE;AAA1B,OAAd;AACAM,MAAAA,IAAI,CAACK,SAAL,CAAeC,MAAf,CAAsB,WAAtB;AACD,KAHD,MAGO;AACL,WAAKF,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWG;AAA1B,OAAd;AACAK,MAAAA,IAAI,CAACK,SAAL,CAAeE,GAAf,CAAmB,WAAnB;AACD;;AACD,SAAKH,QAAL,CAAc;AAAEX,MAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3B,KAAd;AACD;AACD;;;;;;;;;;;AASAe,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,wBAAe,yBAFjB;AAGE,uBAAc,WAHhB;AAIE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWI;AAArB,OAJ3B;AAKE,MAAA,OAAO,EAAEc,CAAC,IAAI;AACZ,aAAKb,UAAL,CAAgBa,CAAhB;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AA9C2C;;AAiD9C,eAAetB,eAAf","sourcesContent":["import * as React from \"react\";\nimport { AppData } from \"./appdata\";\n\nclass Condensificator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCondensed: false,\n      offText: `<i className=\"fas fa-eye-slash\"></i> Brevity Please`,\n      onText: `<i class=\"fas fa-eye\"></i> Oh that\\'s novel. Now put it back.`,\n      currentText: this.offText\n    };\n    this.condensify = this.condensify.bind(this);\n  }\n\n  condensify(event) {\n    const step = event.target.closest(\"section.step\");\n    const stepCondensed = event.target.closest(\"section.step.condensed\");\n\n    if (this.state.isCondensed) {\n      this.setState({ currentText: this.state.offText });\n      step.classList.remove(\"condensed\");\n    } else {\n      this.setState({ currentText: this.state.onText });\n      step.classList.add(\"condensed\");\n    }\n    this.setState({ isCondensed: !this.state.isCondensed });\n  }\n  /*\n$(document).on('click', '.condensificator', function(e) {\n\t// so hacky!\n\tvar origText = '';\n\tvar altText = '';\n\t$(this).closest('.step').toggleClass('condensed');\n\t$(this).closest('.condensed')? $(this).html(altText) : $(this).html(origText) ;\n});\n*/\n  render() {\n    return (\n      <span\n        className=\"condensificator test-me\"\n        data-test-name=\"Intro: Condense Slide 1\"\n        data-test-cat=\"Intro Nav\"\n        dangerouslySetInnerHTML={{ __html: this.state.currentText }}\n        onClick={e => {\n          this.condensify(e);\n        }}\n      ></span>\n    );\n  }\n}\n\nexport default Condensificator;\n"]},"metadata":{},"sourceType":"module"}