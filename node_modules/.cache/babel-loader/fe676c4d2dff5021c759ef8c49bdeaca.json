{"ast":null,"code":"const mapHelpers = {\n  setScope: function () {},\n  calculateRoute: function (from, to) {\n    // Draw the map\n    var mapObject = window.google.map;\n    var directionsService = new window.google.maps.DirectionsService();\n    var directionsRequest = {\n      origin: from,\n      destination: to,\n      travelMode: window.google.maps.DirectionsTravelMode.DRIVING,\n      unitSystem: window.google.maps.UnitSystem.METRIC\n    };\n    directionsService.route(directionsRequest, function (response, status) {\n      if (status == window.google.maps.DirectionsStatus.OK) {\n        //directionsDisplay.setOptions({suppressMarkers: true});\n        new window.google.maps.DirectionsRenderer({\n          map: mapObject,\n          directions: response,\n          suppressMarkers: true,\n          polylineOptions: {\n            //icons: [],\n            strokeColor: \"#232020\",\n            strokeOpacity: \".7\",\n            strokeWeight: \"6\" //draggable: true\n            //editable: true\n\n          }\n        });\n        mapObject.setCenter(bounds.getCenter()); //.fitBounds(map.getBounds(), 50);\n      } else {\n        /* JQUERY\n        $(\"#error\").append(\"Unable to retrieve your route<br />\");*/\n        console.log(\"directions response: \" + response);\n      }\n    });\n  },\n  getUserLoc: function () {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }; //console.log(pos);\n        //pos = testLL;\n        //infoWindow.setPosition(pos);\n        //infoWindow.setContent('Location found.');\n        //infoWindow.open(map);\n        //map.setCenter(pos);\n\n        var service = new window.google.maps.DistanceMatrixService();\n        service.getDistanceMatrix({\n          origins: [pos],\n          destinations: [this.state.myLoc],\n          travelMode: \"DRIVING\",\n          unitSystem: window.google.maps.UnitSystem.IMPERIAL,\n          avoidHighways: false,\n          avoidTolls: false\n        }, function (response, status) {\n          if (status !== \"OK\") {\n            // BOO\n            alert(\"Error was: \" + status);\n          } else {\n            // YAY\n            console.log(\"get distance response\" + response);\n            var origin = response.originAddresses[0];\n            var destination = response.destinationAddresses[0]; // {text: \"308 ft\", value: 94}\n\n            var distance = response.rows[0].elements[0].distance; // {text: \"1 min\", value: 40}\n\n            var time = response.rows[0].elements[0].duration;\n            var miles = helpers.getMiles(distance.value); //console.log(originList);\n\n            var Dmarker = new window.google.maps.Marker({\n              position: pos,\n              map: this.map,\n              title: \"You\",\n              animation: window.google.maps.Animation.DROP,\n              icon: {\n                url: \"https://icons.iconarchive.com/icons/icons-land/vista-map-markers/256/Map-Marker-Push-Pin-2-Left-Azure-icon.png\",\n                scaledSize: new window.google.maps.Size(64, 64)\n              }\n            });\n            let output = \"Your current location <strong>( \" + origin + \" )</strong> is about \" + miles + \" miles away. <br />Google thinks it would take me about <strong>\" + time.text + \"</strong> to get there. I'm pretty sure I could do it in less!\";\n            /* JQUERY\n            $(\".res-map .res-map-info p\")\n              .html(output)\n              .removeClass(\"thinking\");*/\n\n            this.calculateRoute(origin, destination);\n          }\n        });\n      }, function () {\n        this.handleLocationError(true, infoWindow, this.map.getCenter());\n      });\n    } else {// Browser doesn't support Geolocation\n      // this.handleLocationError(false, infoWindow, this.map.getCenter());\n    }\n  },\n  handleLocationError: function (browserHasGeolocation, infoWindow, pos) {\n    console.log(\"location error: \" + pos);\n    infoWindow.setPosition(pos);\n    infoWindow.setContent(browserHasGeolocation ? \"Error: The Geolocation service failed.\" : \"Error: Your browser doesn't support geolocation.\");\n    infoWindow.open(this.map);\n    /* JQUERY\n    $(\".res-map .res-map-info p\")\n      .html(\"<p>Well that's awkward.</p>\")\n      .removeClass(\"thinking\");*/\n  }\n};","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/mapHelpers.js"],"names":["mapHelpers","setScope","calculateRoute","from","to","mapObject","window","google","map","directionsService","maps","DirectionsService","directionsRequest","origin","destination","travelMode","DirectionsTravelMode","DRIVING","unitSystem","UnitSystem","METRIC","route","response","status","DirectionsStatus","OK","DirectionsRenderer","directions","suppressMarkers","polylineOptions","strokeColor","strokeOpacity","strokeWeight","setCenter","bounds","getCenter","console","log","getUserLoc","navigator","geolocation","getCurrentPosition","position","pos","lat","coords","latitude","lng","longitude","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","state","myLoc","IMPERIAL","avoidHighways","avoidTolls","alert","originAddresses","destinationAddresses","distance","rows","elements","time","duration","miles","helpers","getMiles","value","Dmarker","Marker","title","animation","Animation","DROP","icon","url","scaledSize","Size","output","text","handleLocationError","infoWindow","browserHasGeolocation","setPosition","setContent","open"],"mappings":"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","sourcesContent":["const mapHelpers = {\n  setScope: function() {},\n  calculateRoute: function(from, to) {\n    // Draw the map\n    var mapObject = window.google.map;\n\n    var directionsService = new window.google.maps.DirectionsService();\n    var directionsRequest = {\n      origin: from,\n      destination: to,\n      travelMode: window.google.maps.DirectionsTravelMode.DRIVING,\n      unitSystem: window.google.maps.UnitSystem.METRIC\n    };\n\n    directionsService.route(directionsRequest, function(response, status) {\n      if (status == window.google.maps.DirectionsStatus.OK) {\n        //directionsDisplay.setOptions({suppressMarkers: true});\n        new window.google.maps.DirectionsRenderer({\n          map: mapObject,\n          directions: response,\n          suppressMarkers: true,\n          polylineOptions: {\n            //icons: [],\n            strokeColor: \"#232020\",\n            strokeOpacity: \".7\",\n            strokeWeight: \"6\"\n            //draggable: true\n            //editable: true\n          }\n        });\n        mapObject.setCenter(bounds.getCenter()); //.fitBounds(map.getBounds(), 50);\n      } else {\n        /* JQUERY\n        $(\"#error\").append(\"Unable to retrieve your route<br />\");*/\n        console.log(\"directions response: \" + response);\n      }\n    });\n  },\n\n  getUserLoc: function() {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        function(position) {\n          var pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          //console.log(pos);\n          //pos = testLL;\n\n          //infoWindow.setPosition(pos);\n          //infoWindow.setContent('Location found.');\n          //infoWindow.open(map);\n          //map.setCenter(pos);\n\n          var service = new window.google.maps.DistanceMatrixService();\n          service.getDistanceMatrix(\n            {\n              origins: [pos],\n              destinations: [this.state.myLoc],\n              travelMode: \"DRIVING\",\n              unitSystem: window.google.maps.UnitSystem.IMPERIAL,\n              avoidHighways: false,\n              avoidTolls: false\n            },\n            function(response, status) {\n              if (status !== \"OK\") {\n                // BOO\n                alert(\"Error was: \" + status);\n              } else {\n                // YAY\n\n                console.log(\"get distance response\" + response);\n\n                var origin = response.originAddresses[0];\n                var destination = response.destinationAddresses[0];\n                // {text: \"308 ft\", value: 94}\n                var distance = response.rows[0].elements[0].distance;\n                // {text: \"1 min\", value: 40}\n                var time = response.rows[0].elements[0].duration;\n                var miles = helpers.getMiles(distance.value);\n                //console.log(originList);\n\n                var Dmarker = new window.google.maps.Marker({\n                  position: pos,\n                  map: this.map,\n                  title: \"You\",\n                  animation: window.google.maps.Animation.DROP,\n                  icon: {\n                    url:\n                      \"https://icons.iconarchive.com/icons/icons-land/vista-map-markers/256/Map-Marker-Push-Pin-2-Left-Azure-icon.png\",\n                    scaledSize: new window.google.maps.Size(64, 64)\n                  }\n                });\n\n                let output =\n                  \"Your current location <strong>( \" +\n                  origin +\n                  \" )</strong> is about \" +\n                  miles +\n                  \" miles away. <br />Google thinks it would take me about <strong>\" +\n                  time.text +\n                  \"</strong> to get there. I'm pretty sure I could do it in less!\";\n                /* JQUERY\n                $(\".res-map .res-map-info p\")\n                  .html(output)\n                  .removeClass(\"thinking\");*/\n\n                this.calculateRoute(origin, destination);\n              }\n            }\n          );\n        },\n        function() {\n          this.handleLocationError(true, infoWindow, this.map.getCenter());\n        }\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      // this.handleLocationError(false, infoWindow, this.map.getCenter());\n    }\n  },\n\n  handleLocationError: function(browserHasGeolocation, infoWindow, pos) {\n    console.log(\"location error: \" + pos);\n    infoWindow.setPosition(pos);\n    infoWindow.setContent(\n      browserHasGeolocation\n        ? \"Error: The Geolocation service failed.\"\n        : \"Error: Your browser doesn't support geolocation.\"\n    );\n    infoWindow.open(this.map);\n    /* JQUERY\n    $(\".res-map .res-map-info p\")\n      .html(\"<p>Well that's awkward.</p>\")\n      .removeClass(\"thinking\");*/\n  }\n};\n"]},"metadata":{},"sourceType":"module"}