{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/map.js\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\"; //import mapHelpers from \"./mapHelpers\";\n\nconst google = window.google;\nconst BobsMyUncle = [{\n  featureType: \"all\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"administrative.country\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"on\"\n  }]\n}, {\n  featureType: \"administrative.country\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ff0000\"\n  }]\n}, {\n  featureType: \"administrative.country\",\n  elementType: \"labels.text.stroke\",\n  stylers: [{\n    color: \"#3a3535\"\n  }]\n}, {\n  featureType: \"administrative.province\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"on\"\n  }]\n}, {\n  featureType: \"administrative.province\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ff0000\"\n  }]\n}, {\n  featureType: \"administrative.province\",\n  elementType: \"labels.text.stroke\",\n  stylers: [{\n    color: \"#3a3535\"\n  }]\n}, {\n  featureType: \"administrative.locality\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"administrative.locality\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"administrative.locality\",\n  elementType: \"labels.text.stroke\",\n  stylers: [{\n    color: \"#756151\"\n  }, {\n    lightness: \"15\"\n  }, {\n    saturation: \"2\"\n  }, {\n    gamma: \"3.67\"\n  }]\n}, {\n  featureType: \"road.highway\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"simplified\"\n  }]\n}, {\n  featureType: \"road.highway\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    visibility: \"simplified\"\n  }, {\n    color: \"#f0af54\"\n  }]\n}, {\n  featureType: \"road.highway\",\n  elementType: \"labels.text\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"road.highway\",\n  elementType: \"labels.icon\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"road.highway.controlled_access\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"simplified\"\n  }]\n}, {\n  featureType: \"road.highway.controlled_access\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    visibility: \"simplified\"\n  }, {\n    color: \"#f0af54\"\n  }]\n}, {\n  featureType: \"road.highway.controlled_access\",\n  elementType: \"labels.text\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"road.highway.controlled_access\",\n  elementType: \"labels.icon\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"road.arterial\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"simplified\"\n  }]\n}, {\n  featureType: \"road.arterial\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    visibility: \"simplified\"\n  }, {\n    color: \"#d2c1a5\"\n  }]\n}, {\n  featureType: \"road.arterial\",\n  elementType: \"labels\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"road.local\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"simplified\"\n  }]\n}, {\n  featureType: \"road.local\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    color: \"#c4a983\"\n  }, {\n    visibility: \"simplified\"\n  }]\n}, {\n  featureType: \"road.local\",\n  elementType: \"labels\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"all\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"geometry\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    visibility: \"off\"\n  }, {\n    color: \"#e3ce9f\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"geometry.stroke\",\n  stylers: [{\n    visibility: \"simplified\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"labels\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}];\n\nclass Commute extends React.Component {\n  // ***** access via this.context\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapIsReady: false,\n      myLoc: {},\n      googleMap: {},\n      jeffMarker: {},\n      jeffInfo: {}\n    };\n    this.getCommute = this.getCommute.bind(this);\n  }\n\n  componentWillMount() {\n    window.onload = this.setState({\n      mapIsReady: true,\n      myLoc: this.context.myLatLng\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.mapIsReady) {\n      // Display the map\n      this.map = new google.maps.Map(document.getElementById(\"Commute\"), {\n        center: this.state.myLoc,\n        zoom: 14,\n        disableDefaultUI: true,\n        backgroundColor: \"hsla(0, 0%, 0%, 0)\",\n        styles: BobsMyUncle\n      });\n      var map = this.map;\n      var contentString = '<div id=\"mapContent\"><h4>Me</h4></div>';\n      this.infowindow = new google.maps.InfoWindow({\n        content: contentString\n      });\n      var infowindow = this.infowindow;\n      this.marker = new google.maps.Marker({\n        position: this.state.myLoc,\n        map: map,\n        title: \"Me\",\n        animation: google.maps.Animation.DROP,\n        icon: {\n          url: \"https://icons.iconarchive.com/icons/icons-land/vista-map-markers/128/Map-Marker-Push-Pin-2-Right-Chartreuse-icon.png\",\n          scaledSize: new google.maps.Size(64, 64)\n        }\n      });\n      var marker = this.marker;\n      google.maps.event.addListener(marker, \"click\", function () {\n        infowindow.open(map, this);\n      });\n      this.setState({\n        googleMap: map,\n        jeffMarker: marker,\n        jeffInfo: infowindow\n      });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {//console.log(\"Component Will Update\");\n  }\n\n  componentDidUpdate(prevProps, prevState) {//console.log(\"Component Did Update\");\n    //this.updateMapStyle = (this.map, this.marker);\n  }\n\n  getCommute(event) {\n    console.log(\"Get Commute\"); // Try HTML5 geolocation.\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }; //console.log(pos);\n        //pos = testLL;\n        //infoWindow.setPosition(pos);\n        //infoWindow.setContent('Location found.');\n        //infoWindow.open(map);\n        //map.setCenter(pos);\n\n        var service = new google.maps.DistanceMatrixService();\n        service.getDistanceMatrix({\n          origins: [pos],\n          destinations: this.state.myLoc,\n          travelMode: \"DRIVING\",\n          unitSystem: google.maps.UnitSystem.IMPERIAL,\n          avoidHighways: false,\n          avoidTolls: false\n        }, function (response, status) {\n          if (status !== \"OK\") {\n            // BOO\n            alert(\"Error was: \" + status);\n          } else {\n            // YAY\n            console.log(\"get distance response\" + response);\n            var origin = response.originAddresses[0];\n            var destination = response.destinationAddresses[0]; // {text: \"308 ft\", value: 94}\n\n            var distance = response.rows[0].elements[0].distance; // {text: \"1 min\", value: 40}\n\n            var time = response.rows[0].elements[0].duration;\n            var miles = helpers.getMiles(distance.value); //console.log(originList);\n\n            var Dmarker = new google.maps.Marker({\n              position: pos,\n              map: this.map,\n              title: \"You\",\n              animation: google.maps.Animation.DROP,\n              icon: {\n                url: \"https://icons.iconarchive.com/icons/icons-land/vista-map-markers/256/Map-Marker-Push-Pin-2-Left-Azure-icon.png\",\n                scaledSize: new google.maps.Size(64, 64)\n              }\n            });\n            let output = \"Your current location <strong>( \" + origin + \" )</strong> is about \" + miles + \" miles away. <br />Google thinks it would take me about <strong>\" + time.text + \"</strong> to get there. I'm pretty sure I could do it in less!\"; //$('.res-map .res-map-info p').html(output).removeClass('thinking');\n            //calculateRoute(origin, destination);\n          }\n        });\n      }, function () {//handleLocationError(true, infoWindow, map.getCenter());\n      });\n    } else {} // Browser doesn't support Geolocation\n    //handleLocationError(false, infoWindow, map.getCenter());\n\n    /*\n    function calculateRoute(from, to) {\n    // Center initialized to Naples, Italy\n    var myOptions = {\n    zoom: 10,\n    center: new google.maps.LatLng(myLatLng),\n    mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    // Draw the map\n    var mapObject = map;\n    //var directionsRenderer = new google.maps.DirectionsRenderer();\n    //directionsRenderer.setMap(mapObject);\n    var directionsService = new google.maps.DirectionsService();\n    var directionsRequest = {\n    origin: from,\n    destination: to,\n    travelMode: google.maps.DirectionsTravelMode.DRIVING,\n    unitSystem: google.maps.UnitSystem.METRIC\n    };\n         \n    directionsService.route( directionsRequest, function(response, status){\n    if (status == google.maps.DirectionsStatus.OK){\n    //directionsDisplay.setOptions({suppressMarkers: true});\n    new google.maps.DirectionsRenderer({\n    \tmap: mapObject,\n    \tdirections: response,\n    \tsuppressMarkers: true,\n    \tpolylineOptions: {\n    \t//icons: [],\n    \tstrokeColor: \"#232020\",\n    \tstrokeOpacity: \".7\",\n    \tstrokeWeight: \"6\"\n    \t//draggable: true\n    \t//editable: true\n    \t}\n    });\n    map.setCenter(bounds.getCenter()); //.fitBounds(map.getBounds(), 50);\n               \n         } else {\n    $(\"#error\").append(\"Unable to retrieve your route<br />\");\n    console.log('directions response: ' +response);\n    }\n    });\n    }\n    function getUserLoc(){\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n    var pos = {\n    \tlat: position.coords.latitude,\n    \tlng: position.coords.longitude\n    };\n    //console.log(pos);\n    //pos = testLL;\n    \n    //infoWindow.setPosition(pos);\n    //infoWindow.setContent('Location found.');\n    //infoWindow.open(map);\n    //map.setCenter(pos);\n    \n    var service = new google.maps.DistanceMatrixService;\n    service.getDistanceMatrix({\n    \torigins: [pos],\n    \tdestinations: [myLatLng],\n    \ttravelMode: 'DRIVING',\n    \tunitSystem: google.maps.UnitSystem.IMPERIAL,\n    \tavoidHighways: false,\n    \tavoidTolls: false\n    }, function(response, status) {\n    \tif (status !== 'OK') { // BOO\n    \t\talert('Error was: ' + status);\n    \t} else { // YAY\n    \t\t\tconsole.log('get distance response' + response);\n    \t\t\tvar origin = response.originAddresses[0];\n    \t\tvar destination = response.destinationAddresses[0];\n    \t\t// {text: \"308 ft\", value: 94}\n    \t\tvar distance = response.rows[0].elements[0].distance; \n    \t\t// {text: \"1 min\", value: 40}\n    \t\tvar time = response.rows[0].elements[0].duration; \n    \t\tvar miles = getMiles(distance.value);\n    \t\t//console.log(originList);\n    \t\t\tvar Dmarker = new google.maps.Marker({\n    \t\t\tposition: pos,\n    \t\t\tmap: map,\n    \t\t\ttitle: 'You',\n    \t\t\tanimation: google.maps.Animation.DROP,\n    \t\t\ticon: {\n    \t\t\t\turl: \"https://icons.iconarchive.com/icons/icons-land/vista-map-markers/256/Map-Marker-Push-Pin-2-Left-Azure-icon.png\",\n    \t\t\t\tscaledSize: new google.maps.Size(64, 64)\n    \t\t\t}\n    \t\t});\n    \t\t\tlet output = 'Your current location <strong>( ' + origin + ' )</strong> is about ' + miles + ' miles away. <br />Google thinks it would take me about <strong>' + time.text + '</strong> to get there. I\\'m pretty sure I could do it in less!';\n    \t\t$('.res-map .res-map-info p').html(output).removeClass('thinking');\n    \t\t\tcalculateRoute(origin, destination);\n    \t}\n    });\n    }, function() {\n    handleLocationError(true, infoWindow, map.getCenter());\n    });\n    } else {\n    // Browser doesn't support Geolocation\n    handleLocationError(false, infoWindow, map.getCenter());\n    }\n    }\n    function handleLocationError(browserHasGeolocation, infoWindow, pos) {\n    console.log('location error: ' + pos);\n    infoWindow.setPosition(pos);\n    infoWindow.setContent(browserHasGeolocation ?\n    'Error: The Geolocation service failed.' :\n    'Error: Your browser doesn\\'t support geolocation.');\n    infoWindow.open(map);\n    $('.res-map .res-map-info p').html('<p>Well that\\'s awkward.</p>').removeClass('thinking');\n    }\n    */\n\n  }\n\n  render() {\n    //console.log(this.context.introVisible);\n    const context = this.context;\n    const mapActiveClass = context.mapVisible ? \"res-map full-view active\" : \"res-map full-view\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Map\",\n      className: mapActiveClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Commute\",\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"res-map-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"thinking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }\n    }, \"Calculating my commute to you.\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        this.getCommute(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }\n    }, \"Get Commute\")));\n  }\n\n}\n\nCommute.contextType = AppData;\nexport default Commute;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/map.js"],"names":["React","ReactDOM","AppData","helpers","google","window","BobsMyUncle","featureType","elementType","stylers","visibility","color","lightness","saturation","gamma","Commute","Component","constructor","props","state","mapIsReady","myLoc","googleMap","jeffMarker","jeffInfo","getCommute","bind","componentWillMount","onload","setState","context","myLatLng","componentDidMount","map","maps","Map","document","getElementById","center","zoom","disableDefaultUI","backgroundColor","styles","contentString","infowindow","InfoWindow","content","marker","Marker","position","title","animation","Animation","DROP","icon","url","scaledSize","Size","event","addListener","open","componentWillUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","console","log","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","unitSystem","UnitSystem","IMPERIAL","avoidHighways","avoidTolls","response","status","alert","origin","originAddresses","destination","destinationAddresses","distance","rows","elements","time","duration","miles","getMiles","value","Dmarker","output","text","render","mapActiveClass","mapVisible","width","height","e","contextType"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n//import mapHelpers from \"./mapHelpers\";\n\nconst google = window.google;\nconst BobsMyUncle = [\n  {\n    featureType: \"all\",\n    elementType: \"all\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"administrative.country\",\n    elementType: \"all\",\n    stylers: [{ visibility: \"on\" }]\n  },\n  {\n    featureType: \"administrative.country\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#ff0000\" }]\n  },\n  {\n    featureType: \"administrative.country\",\n    elementType: \"labels.text.stroke\",\n    stylers: [{ color: \"#3a3535\" }]\n  },\n  {\n    featureType: \"administrative.province\",\n    elementType: \"all\",\n    stylers: [{ visibility: \"on\" }]\n  },\n  {\n    featureType: \"administrative.province\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#ff0000\" }]\n  },\n  {\n    featureType: \"administrative.province\",\n    elementType: \"labels.text.stroke\",\n    stylers: [{ color: \"#3a3535\" }]\n  },\n  {\n    featureType: \"administrative.locality\",\n    elementType: \"all\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"administrative.locality\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#ffffff\" }]\n  },\n  {\n    featureType: \"administrative.locality\",\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      { color: \"#756151\" },\n      { lightness: \"15\" },\n      { saturation: \"2\" },\n      { gamma: \"3.67\" }\n    ]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"all\",\n    stylers: [{ visibility: \"simplified\" }]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry.fill\",\n    stylers: [{ visibility: \"simplified\" }, { color: \"#f0af54\" }]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"labels.text\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"labels.icon\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"road.highway.controlled_access\",\n    elementType: \"all\",\n    stylers: [{ visibility: \"simplified\" }]\n  },\n  {\n    featureType: \"road.highway.controlled_access\",\n    elementType: \"geometry.fill\",\n    stylers: [{ visibility: \"simplified\" }, { color: \"#f0af54\" }]\n  },\n  {\n    featureType: \"road.highway.controlled_access\",\n    elementType: \"labels.text\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"road.highway.controlled_access\",\n    elementType: \"labels.icon\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"all\",\n    stylers: [{ visibility: \"simplified\" }]\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry.fill\",\n    stylers: [{ visibility: \"simplified\" }, { color: \"#d2c1a5\" }]\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"labels\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"all\",\n    stylers: [{ visibility: \"simplified\" }]\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"geometry.fill\",\n    stylers: [{ color: \"#c4a983\" }, { visibility: \"simplified\" }]\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"labels\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"all\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry.fill\",\n    stylers: [{ visibility: \"off\" }, { color: \"#e3ce9f\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry.stroke\",\n    stylers: [{ visibility: \"simplified\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels\",\n    stylers: [{ visibility: \"off\" }]\n  }\n];\n\nclass Commute extends React.Component {\n  static contextType = AppData; // ***** access via this.context\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapIsReady: false,\n      myLoc: {},\n      googleMap: {},\n      jeffMarker: {},\n      jeffInfo: {}\n    };\n    this.getCommute = this.getCommute.bind(this);\n  }\n  componentWillMount() {\n    window.onload = this.setState({\n      mapIsReady: true,\n      myLoc: this.context.myLatLng\n    });\n  }\n  componentDidMount() {\n    if (this.state.mapIsReady) {\n      // Display the map\n      this.map = new google.maps.Map(document.getElementById(\"Commute\"), {\n        center: this.state.myLoc,\n        zoom: 14,\n        disableDefaultUI: true,\n        backgroundColor: \"hsla(0, 0%, 0%, 0)\",\n        styles: BobsMyUncle\n      });\n      var map = this.map;\n\n      var contentString = '<div id=\"mapContent\"><h4>Me</h4></div>';\n      this.infowindow = new google.maps.InfoWindow({\n        content: contentString\n      });\n      var infowindow = this.infowindow;\n      this.marker = new google.maps.Marker({\n        position: this.state.myLoc,\n        map: map,\n        title: \"Me\",\n        animation: google.maps.Animation.DROP,\n        icon: {\n          url:\n            \"https://icons.iconarchive.com/icons/icons-land/vista-map-markers/128/Map-Marker-Push-Pin-2-Right-Chartreuse-icon.png\",\n          scaledSize: new google.maps.Size(64, 64)\n        }\n      });\n      var marker = this.marker;\n      google.maps.event.addListener(marker, \"click\", function() {\n        infowindow.open(map, this);\n      });\n\n      this.setState({\n        googleMap: map,\n        jeffMarker: marker,\n        jeffInfo: infowindow\n      });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    //console.log(\"Component Will Update\");\n  }\n  componentDidUpdate(prevProps, prevState) {\n    //console.log(\"Component Did Update\");\n    //this.updateMapStyle = (this.map, this.marker);\n  }\n\n  getCommute(event) {\n    console.log(\"Get Commute\");\n\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        function(position) {\n          var pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          //console.log(pos);\n          //pos = testLL;\n\n          //infoWindow.setPosition(pos);\n          //infoWindow.setContent('Location found.');\n          //infoWindow.open(map);\n          //map.setCenter(pos);\n\n          var service = new google.maps.DistanceMatrixService();\n          service.getDistanceMatrix(\n            {\n              origins: [pos],\n              destinations: this.state.myLoc,\n              travelMode: \"DRIVING\",\n              unitSystem: google.maps.UnitSystem.IMPERIAL,\n              avoidHighways: false,\n              avoidTolls: false\n            },\n            function(response, status) {\n              if (status !== \"OK\") {\n                // BOO\n                alert(\"Error was: \" + status);\n              } else {\n                // YAY\n\n                console.log(\"get distance response\" + response);\n\n                var origin = response.originAddresses[0];\n                var destination = response.destinationAddresses[0];\n                // {text: \"308 ft\", value: 94}\n                var distance = response.rows[0].elements[0].distance;\n                // {text: \"1 min\", value: 40}\n                var time = response.rows[0].elements[0].duration;\n                var miles = helpers.getMiles(distance.value);\n                //console.log(originList);\n\n                var Dmarker = new google.maps.Marker({\n                  position: pos,\n                  map: this.map,\n                  title: \"You\",\n                  animation: google.maps.Animation.DROP,\n                  icon: {\n                    url:\n                      \"https://icons.iconarchive.com/icons/icons-land/vista-map-markers/256/Map-Marker-Push-Pin-2-Left-Azure-icon.png\",\n                    scaledSize: new google.maps.Size(64, 64)\n                  }\n                });\n\n                let output =\n                  \"Your current location <strong>( \" +\n                  origin +\n                  \" )</strong> is about \" +\n                  miles +\n                  \" miles away. <br />Google thinks it would take me about <strong>\" +\n                  time.text +\n                  \"</strong> to get there. I'm pretty sure I could do it in less!\";\n                //$('.res-map .res-map-info p').html(output).removeClass('thinking');\n\n                //calculateRoute(origin, destination);\n              }\n            }\n          );\n        },\n        function() {\n          //handleLocationError(true, infoWindow, map.getCenter());\n        }\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      //handleLocationError(false, infoWindow, map.getCenter());\n    }\n\n    /*\n\n\tfunction calculateRoute(from, to) {\n\t\t// Center initialized to Naples, Italy\n\t\tvar myOptions = {\n\t\t\tzoom: 10,\n\t\t\tcenter: new google.maps.LatLng(myLatLng),\n\t\t\tmapTypeId: google.maps.MapTypeId.ROADMAP\n\t\t};\n\t\t// Draw the map\n\t\tvar mapObject = map;\n\n\t\t//var directionsRenderer = new google.maps.DirectionsRenderer();\n\t\t//directionsRenderer.setMap(mapObject);\n\n\t\tvar directionsService = new google.maps.DirectionsService();\n\t\tvar directionsRequest = {\n\t\t\torigin: from,\n\t\t\tdestination: to,\n\t\t\ttravelMode: google.maps.DirectionsTravelMode.DRIVING,\n\t\t\tunitSystem: google.maps.UnitSystem.METRIC\n\t\t};\n\t        \n\t\tdirectionsService.route( directionsRequest, function(response, status){\n\t\t\tif (status == google.maps.DirectionsStatus.OK){\n\t\t\t\t//directionsDisplay.setOptions({suppressMarkers: true});\n\t\t\t\tnew google.maps.DirectionsRenderer({\n\t\t\t\t\tmap: mapObject,\n\t\t\t\t\tdirections: response,\n\t\t\t\t\tsuppressMarkers: true,\n\t\t\t\t\tpolylineOptions: {\n\t\t\t\t\t//icons: [],\n\t\t\t\t\tstrokeColor: \"#232020\",\n\t\t\t\t\tstrokeOpacity: \".7\",\n\t\t\t\t\tstrokeWeight: \"6\"\n\t\t\t\t\t//draggable: true\n\t\t\t\t\t//editable: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tmap.setCenter(bounds.getCenter()); //.fitBounds(map.getBounds(), 50);\n\t              \n\t        } else {\n\t\t\t\t$(\"#error\").append(\"Unable to retrieve your route<br />\");\n\t\t\t\tconsole.log('directions response: ' +response);\n\t\t\t}\n\t\t});\n\t}\n\n\n\tfunction getUserLoc(){\n\t\t// Try HTML5 geolocation.\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(function(position) {\n\t\t\t\tvar pos = {\n\t\t\t\t\tlat: position.coords.latitude,\n\t\t\t\t\tlng: position.coords.longitude\n\t\t\t\t};\n\t\t\t\t//console.log(pos);\n\t\t\t\t//pos = testLL;\n\t\t\t\t\n\t\t\t\t//infoWindow.setPosition(pos);\n\t\t\t\t//infoWindow.setContent('Location found.');\n\t\t\t\t//infoWindow.open(map);\n\t\t\t\t//map.setCenter(pos);\n\t\t\t\t\n\t\t\t\tvar service = new google.maps.DistanceMatrixService;\n\t\t\t\tservice.getDistanceMatrix({\n\t\t\t\t\torigins: [pos],\n\t\t\t\t\tdestinations: [myLatLng],\n\t\t\t\t\ttravelMode: 'DRIVING',\n\t\t\t\t\tunitSystem: google.maps.UnitSystem.IMPERIAL,\n\t\t\t\t\tavoidHighways: false,\n\t\t\t\t\tavoidTolls: false\n\t\t\t\t}, function(response, status) {\n\t\t\t\t\tif (status !== 'OK') { // BOO\n\t\t\t\t\t\talert('Error was: ' + status);\n\t\t\t\t\t} else { // YAY\n\n\t\t\t\t\t\tconsole.log('get distance response' + response);\n\n\t\t\t\t\t\tvar origin = response.originAddresses[0];\n\t\t\t\t\t\tvar destination = response.destinationAddresses[0];\n\t\t\t\t\t\t// {text: \"308 ft\", value: 94}\n\t\t\t\t\t\tvar distance = response.rows[0].elements[0].distance; \n\t\t\t\t\t\t// {text: \"1 min\", value: 40}\n\t\t\t\t\t\tvar time = response.rows[0].elements[0].duration; \n\t\t\t\t\t\tvar miles = getMiles(distance.value);\n\t\t\t\t\t\t//console.log(originList);\n\n\t\t\t\t\t\tvar Dmarker = new google.maps.Marker({\n\t\t\t\t\t\t\tposition: pos,\n\t\t\t\t\t\t\tmap: map,\n\t\t\t\t\t\t\ttitle: 'You',\n\t\t\t\t\t\t\tanimation: google.maps.Animation.DROP,\n\t\t\t\t\t\t\ticon: {\n\t\t\t\t\t\t\t\turl: \"https://icons.iconarchive.com/icons/icons-land/vista-map-markers/256/Map-Marker-Push-Pin-2-Left-Azure-icon.png\",\n\t\t\t\t\t\t\t\tscaledSize: new google.maps.Size(64, 64)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tlet output = 'Your current location <strong>( ' + origin + ' )</strong> is about ' + miles + ' miles away. <br />Google thinks it would take me about <strong>' + time.text + '</strong> to get there. I\\'m pretty sure I could do it in less!';\n\t\t\t\t\t\t$('.res-map .res-map-info p').html(output).removeClass('thinking');\n\n\t\t\t\t\t\tcalculateRoute(origin, destination);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}, function() {\n\t\t\t\thandleLocationError(true, infoWindow, map.getCenter());\n\t\t\t});\n\t\t} else {\n\t\t\t// Browser doesn't support Geolocation\n\t\t\thandleLocationError(false, infoWindow, map.getCenter());\n\t\t}\n\t}\n\n\tfunction handleLocationError(browserHasGeolocation, infoWindow, pos) {\n\t\tconsole.log('location error: ' + pos);\n\t\tinfoWindow.setPosition(pos);\n\t\tinfoWindow.setContent(browserHasGeolocation ?\n\t\t'Error: The Geolocation service failed.' :\n\t\t'Error: Your browser doesn\\'t support geolocation.');\n\t\tinfoWindow.open(map);\n\t\t$('.res-map .res-map-info p').html('<p>Well that\\'s awkward.</p>').removeClass('thinking');\n\n\t}\n*/\n  }\n\n  render() {\n    //console.log(this.context.introVisible);\n    const context = this.context;\n\n    const mapActiveClass = context.mapVisible\n      ? \"res-map full-view active\"\n      : \"res-map full-view\";\n\n    return (\n      <div id=\"Map\" className={mapActiveClass}>\n        <div id=\"Commute\" style={{ width: \"100%\", height: \"100%\" }}></div>\n        <div className=\"res-map-info\">\n          <p className=\"thinking\">Calculating my commute to you.</p>\n          <button\n            onClick={e => {\n              this.getCommute(e);\n            }}\n          >\n            Get Commute\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Commute;\n"]},"metadata":{},"sourceType":"module"}