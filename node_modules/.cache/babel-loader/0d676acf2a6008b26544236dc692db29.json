{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/appdata.js\";\nimport * as React from \"react\";\nlet AppData = React.createContext();\nlet initialState = {\n  count: 10,\n  currentColor: \"#bada55\"\n};\n\nlet reducer = (state, action) => {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n\n    case \"increment\":\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case \"decrement\":\n      return { ...state,\n        count: state.count - 1\n      };\n\n    case \"set-color\":\n      return { ...state,\n        currentColor: action.payload\n      };\n  }\n};\n\nfunction AppDataProvider(props) {\n  // [A]\n  let [state, dispatch] = React.useReducer(reducer, initialState);\n  let value = {\n    state,\n    dispatch\n  }; // [B]\n\n  return /*#__PURE__*/React.createElement(AppData.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, props.children);\n}\n\nlet AppDataConsumer = AppData.Consumer; // [C]\n\nexport { AppData, AppDataProvider, AppDataConsumer };","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/appdata.js"],"names":["React","AppData","createContext","initialState","count","currentColor","reducer","state","action","type","payload","AppDataProvider","props","dispatch","useReducer","value","children","AppDataConsumer","Consumer"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,IAAIC,OAAO,GAAGD,KAAK,CAACE,aAAN,EAAd;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,YAAY,EAAE;AAFG,CAAnB;;AAKA,IAAIC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAON,YAAP;;AACF,SAAK,WAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAAjC,OAAP;;AACF,SAAK,WAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAAjC,OAAP;;AACF,SAAK,WAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYF,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAAjC,OAAP;AARJ;AAUD,CAXD;;AAaA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B;AACA,MAAI,CAACL,KAAD,EAAQM,QAAR,IAAoBb,KAAK,CAACc,UAAN,CAAiBR,OAAjB,EAA0BH,YAA1B,CAAxB;AACA,MAAIY,KAAK,GAAG;AAAER,IAAAA,KAAF;AAASM,IAAAA;AAAT,GAAZ,CAH8B,CAK9B;;AACA,sBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,KAAK,CAACI,QAAvC,CAAP;AACD;;AAED,IAAIC,eAAe,GAAGhB,OAAO,CAACiB,QAA9B,C,CAEA;;AACA,SAASjB,OAAT,EAAkBU,eAAlB,EAAmCM,eAAnC","sourcesContent":["import * as React from \"react\";\n\nlet AppData = React.createContext();\n\nlet initialState = {\n  count: 10,\n  currentColor: \"#bada55\"\n};\n\nlet reducer = (state, action) => {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case \"increment\":\n      return { ...state, count: state.count + 1 };\n    case \"decrement\":\n      return { ...state, count: state.count - 1 };\n    case \"set-color\":\n      return { ...state, currentColor: action.payload };\n  }\n};\n\nfunction AppDataProvider(props) {\n  // [A]\n  let [state, dispatch] = React.useReducer(reducer, initialState);\n  let value = { state, dispatch };\n\n  // [B]\n  return <AppData.Provider value={value}>{props.children}</AppData.Provider>;\n}\n\nlet AppDataConsumer = AppData.Consumer;\n\n// [C]\nexport { AppData, AppDataProvider, AppDataConsumer };\n"]},"metadata":{},"sourceType":"module"}