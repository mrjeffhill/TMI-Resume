{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/debugger.js\";\nimport * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n\nconst axios = require(\"axios\").default;\n\nclass Debugger extends React.Component {\n  // ***** access via this.context\n  constructor(props) {\n    super(props);\n    this.state = {\n      ua: {},\n      ip: \"\",\n      ipData: {}\n    };\n    this.escFunction = this.escFunction.bind(this);\n  }\n\n  escFunction(event) {\n    if (event.keyCode === 27) {\n      //Do whatever when esc is pressed\n      alert(\"OHAI!!!\");\n    }\n  }\n\n  componentWillMount() {\n    var userIp = \"\";\n    var ipData = {};\n    var ua = helpers.getDevicive(navigator.userAgent);\n    /*\n    getDevicive: function(UAstr) {\n    var getString = \"http://api.userstack.com/detect?access_key=b301331f9e5761edf368d241475b4836&ua=\" + UAstr;\n     axios.get(getString).then(function(response) {\n      //console.log(response);\n      return response.data;\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .finally(function () {\n      // always executed\n    });\n    },\n    */\n\n    var http = require('http');\n\n    http.get({\n      'host': 'api.ipify.org',\n      'port': 80,\n      'path': '/'\n    }, function (resp) {\n      resp.on('data', function (ip) {\n        console.log(\"My public IP address is: \" + ip);\n        userIp = ip;\n        console.log(userIp);\n        ipData = helpers.getSniffy(ip);\n        console.log(ipData);\n      });\n    });\n    /*\n      getSniffy: function(ip) {\n        var getString = \"http://api.ipstack.com/\" + ip + \"?access_key=440420267b2d228f92803e8a2d074666\"\n    \n        axios.get(getString).then(function(response) {\n          //console.log(response);\n          return response.data;\n        }).catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n      },\n    */\n    //this.setState({ ua: ua, ip: userIp, ipData: ipData });\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  render() {\n    console.log(this.state.ip);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nDebugger.contextType = AppData;\nexport default Debugger;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/debugger.js"],"names":["React","AppData","helpers","axios","require","default","Debugger","Component","constructor","props","state","ua","ip","ipData","escFunction","bind","event","keyCode","alert","componentWillMount","userIp","getDevicive","navigator","userAgent","http","get","resp","on","console","log","getSniffy","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","contextType"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACT;AAE5BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,EADO;AAEXC,MAAAA,EAAE,EAAE,EAFO;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDD,EAAAA,WAAW,CAACE,KAAD,EAAO;AAChB,QAAGA,KAAK,CAACC,OAAN,KAAkB,EAArB,EAAyB;AACvB;AACAC,MAAAA,KAAK,CAAC,SAAD,CAAL;AACD;AACF;;AAEDC,EAAAA,kBAAkB,GAAE;AAClB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIP,MAAM,GAAG,EAAb;AACA,QAAIF,EAAE,GAAGT,OAAO,CAACmB,WAAR,CAAoBC,SAAS,CAACC,SAA9B,CAAT;AACA;;;;;;;;;;;;;;;;AAiBA,QAAIC,IAAI,GAAGpB,OAAO,CAAC,MAAD,CAAlB;;AAEAoB,IAAAA,IAAI,CAACC,GAAL,CAAS;AAAC,cAAQ,eAAT;AAA0B,cAAQ,EAAlC;AAAsC,cAAQ;AAA9C,KAAT,EAA6D,UAASC,IAAT,EAAe;AAC1EA,MAAAA,IAAI,CAACC,EAAL,CAAQ,MAAR,EAAgB,UAASf,EAAT,EAAa;AAC3BgB,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BjB,EAA1C;AACAQ,QAAAA,MAAM,GAAGR,EAAT;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACAP,QAAAA,MAAM,GAAGX,OAAO,CAAC4B,SAAR,CAAkBlB,EAAlB,CAAT;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACD,OAND;AAOD,KARD;AASJ;;;;;;;;;;;;;;;;AAgBI;AACD;;AACDkB,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKnB,WAA1C,EAAuD,KAAvD;AAID;;AACDoB,EAAAA,oBAAoB,GAAE;AACpBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,SAA7B,EAAwC,KAAKrB,WAA7C,EAA0D,KAA1D;AACD;;AACDsB,EAAAA,MAAM,GAAE;AACJR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWE,EAAvB;AACF,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAnFoC;;AAAjCN,Q,CACC+B,W,GAAcpC,O;AAqFrB,eAAeK,QAAf","sourcesContent":["import * as React from \"react\";\nimport { AppData } from \"./appdata\";\nimport helpers from \"./helpers\";\n\nconst axios = require(\"axios\").default;\n\nclass Debugger extends React.Component {\nstatic contextType = AppData; // ***** access via this.context\n\n  constructor(props){\n    super(props);\n    this.state = {\n      ua: {},\n      ip: \"\",\n      ipData: {}\n    };\n    this.escFunction = this.escFunction.bind(this);\n  }\n  escFunction(event){\n    if(event.keyCode === 27) {\n      //Do whatever when esc is pressed\n      alert(\"OHAI!!!\");\n    }\n  }\n\n  componentWillMount(){\n    var userIp = \"\";\n    var ipData = {};\n    var ua = helpers.getDevicive(navigator.userAgent);\n    /*\n  getDevicive: function(UAstr) {\n    var getString = \"http://api.userstack.com/detect?access_key=b301331f9e5761edf368d241475b4836&ua=\" + UAstr;\n\n    axios.get(getString).then(function(response) {\n      //console.log(response);\n      return response.data;\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .finally(function () {\n      // always executed\n    });\n  },\n    */\n\n    var http = require('http');\n\n    http.get({'host': 'api.ipify.org', 'port': 80, 'path': '/'}, function(resp) {\n      resp.on('data', function(ip) {\n        console.log(\"My public IP address is: \" + ip);\n        userIp = ip;\n        console.log(userIp);\n        ipData = helpers.getSniffy(ip);\n        console.log(ipData);\n      });\n    });\n/*\n  getSniffy: function(ip) {\n    var getString = \"http://api.ipstack.com/\" + ip + \"?access_key=440420267b2d228f92803e8a2d074666\"\n\n    axios.get(getString).then(function(response) {\n      //console.log(response);\n      return response.data;\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .finally(function () {\n      // always executed\n    });\n  },\n*/\n    //this.setState({ ua: ua, ip: userIp, ipData: ipData });\n  }\n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.escFunction, false);\n\n\n    \n  }\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n  render(){\n      console.log(this.state.ip);\n    return (   \n      <div></div>\n    )\n  }\n}\n\nexport default Debugger;"]},"metadata":{},"sourceType":"module"}