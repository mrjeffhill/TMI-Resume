{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Documents/React Sandbox/resume-resume/src/components/skewer.js\";\nimport * as React from \"react\";\nimport { AppData } from \"./appdata\";\n\nclass Skewer extends React.Component {\n  // ***** access via this.context\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.toggleEntropy = this.toggleEntropy.bind(this);\n  }\n\n  componentDidMount() {}\n\n  componentWillUpdate(nextProps, nextState) {}\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  toggleEntropy(event) {\n    event.preventDefault();\n    document.getElementsByClassName(\"rr\");\n  }\n  /*\n  getMessy($('.agile .rr'), !$('body.entropy').length);\n  var getMessy = function(els, how){\n  let allEls = els.add('.taped-b:before');\n  $.each(allEls, function( i, v ) {\n  how ? $('body').addClass('entropy') : $('body').removeClass('entropy');\n  let rand = how ? Math.floor(Math.random() * 15) - 7 : 0;\n  $(this).css('transform','rotate(' + rand + 'deg)').removeClass(rotationClasses).addClass('rr' + rand);\n         if ($(this).is('.add-tack')){\n  \t$(this).css('margin-left', + (rand / 2) + 'em');\n  }\n  if ($(this).is('.poly-wrap')){\n  \t$(this).removeClass(polyClasses).addClass('poly-' + getRandom(5));\n  \t//$(this).removeClass(polyClasses).addClass('poly-0');\n  }\n  });\n  }\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-align-center cleany extra\",\n      onClick: e => {\n        this.toggleEntropy(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltip\",\n      \"data-title\": \"For those with OCD or ADD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nSkewer.contextType = AppData;\nexport default Skewer;","map":{"version":3,"sources":["/Users/jeff/Documents/React Sandbox/resume-resume/src/components/skewer.js"],"names":["React","AppData","Skewer","Component","constructor","props","state","toggleEntropy","bind","componentDidMount","componentWillUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","event","preventDefault","document","getElementsByClassName","render","e","contextType"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACL;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AACDC,EAAAA,iBAAiB,GAAG,CAAE;;AACtBC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAAE;;AAC5CC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAAE;;AAE3CR,EAAAA,aAAa,CAACS,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,QAAQ,CAACC,sBAAT,CAAgC,IAAhC;AACD;AACD;;;;;;;;;;;;;;;;;;;;AAqBAC,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,OAAO,EAAEC,CAAC,IAAI;AACZ,aAAKd,aAAL,CAAmBc,CAAnB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,oBAAW,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAhDkC;;AAA/BnB,M,CACGoB,W,GAAcrB,O;AAkDvB,eAAeC,MAAf","sourcesContent":["import * as React from \"react\";\nimport { AppData } from \"./appdata\";\n\nclass Skewer extends React.Component {\n  static contextType = AppData; // ***** access via this.context\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.toggleEntropy = this.toggleEntropy.bind(this);\n  }\n  componentDidMount() {}\n  componentWillUpdate(nextProps, nextState) {}\n  componentDidUpdate(prevProps, prevState) {}\n\n  toggleEntropy(event) {\n    event.preventDefault();\n    document.getElementsByClassName(\"rr\");\n  }\n  /*\ngetMessy($('.agile .rr'), !$('body.entropy').length);\n\nvar getMessy = function(els, how){\n\tlet allEls = els.add('.taped-b:before');\n\n\t$.each(allEls, function( i, v ) {\n\t\thow ? $('body').addClass('entropy') : $('body').removeClass('entropy');\n\t\tlet rand = how ? Math.floor(Math.random() * 15) - 7 : 0;\n\t\t$(this).css('transform','rotate(' + rand + 'deg)').removeClass(rotationClasses).addClass('rr' + rand);\n\n        if ($(this).is('.add-tack')){\n\t\t\t$(this).css('margin-left', + (rand / 2) + 'em');\n\t\t}\n\t\tif ($(this).is('.poly-wrap')){\n\t\t\t$(this).removeClass(polyClasses).addClass('poly-' + getRandom(5));\n\t\t\t//$(this).removeClass(polyClasses).addClass('poly-0');\n\t\t}\n\t});\n}\n  */\n  render() {\n    return (\n      <i\n        className=\"fas fa-align-center cleany extra\"\n        onClick={e => {\n          this.toggleEntropy(e);\n        }}\n      >\n        <span className=\"tooltip\" data-title=\"For those with OCD or ADD\"></span>\n      </i>\n    );\n  }\n}\n\nexport default Skewer;\n"]},"metadata":{},"sourceType":"module"}